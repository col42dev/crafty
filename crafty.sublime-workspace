{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"up",
				"updateRecipes"
			],
			[
				"con",
				"constructor"
			],
			[
				"this",
				"thisActionable"
			],
			[
				"u",
				"updateGatherables"
			],
			[
				"a",
				"activity"
			],
			[
				"cons",
				"console"
			],
			[
				"l",
				"lastName"
			],
			[
				"ga",
				"gatherables"
			],
			[
				"for",
				"forEach"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/colinmoore/Perforce/cmoore_MBP/crafty/state.json",
			"settings":
			{
				"buffer_size": 5405,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/colinmoore/Perforce/cmoore_MBP/crafty/rules.json",
			"settings":
			{
				"buffer_size": 23016,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/scripts/services/fsservice.js",
			"settings":
			{
				"buffer_size": 7249,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "'use strict';\n\n/**\n * @ngdoc service\n * @name craftyApp.FSSimFactory\n * @description\n * # FSSimFactory\n * Simulation factory\n */\nangular.module('craftyApp')\n  .factory('FSSimFactory', function ( FSCharacter, FSTask, FSBackpack, FSGatherable,  FSRecipe, FSHarvestable) {\n    // AngularJS will instantiate a singleton by calling \"new\" on this function\n\n\n    /**\n     * @desc \n     * @return \n     */\n  	var FSSimFactory = function(scope) {\n\n  		var thisFactory = this;\n  		var ctrllerScope = scope;\n\n	   /**\n	     * @desc \n	     * @return \n	     */\n	    this.createSimRules = function( json) {\n	\n			this.taskTimeScalar ='1';\n\n	         // Defines\n	        this.harvestableDefines = json.harvestableDefines;  \n	        this.gatherableDefines = json.gatherableDefines;  \n	        this.toolDefines = json.toolDefines;  \n	        this.foodDefines = json.foodDefines;  \n	        this.taskRules = json.taskRules;  \n	       	this.rewardRules = json.rewardRules;  \n			this.recipeDefines = json.recipesDefines; \n\n			this.contextConsole = new FSHarvestable(thisHarvestable, this);\n	    };\n\n\n	   /**\n	     * @desc \n	     * @return \n	     */\n	    this.createSimState = function( json) {\n	\n	     	// Characters\n		    this.characterObjs = {};  \n 			json.characters.forEach( ( function(thisCharacter) {\n 				var characterName = thisCharacter.name;\n	          	this.characterObjs[characterName] = new FSCharacter(thisCharacter, thisFactory);\n	          	this.selectedCharacter = this.characterObjs[characterName];\n	        }).bind(this)); \n	       	this.onClickCharacter = function ( character) {\n	        	this.selectedCharacter = character;\n	        };\n\n	        // Gatherables\n	        this.gatherables = {};  \n	        json.gatherables.forEach( ( function(thisGatherables) {\n	          	this.gatherables[thisGatherables.name] = new FSGatherable(thisGatherables, this);\n	        }).bind(this)); \n	        this.updateGatherables = function() {\n	        	thisFactory.gatherablesArray = Object.keys(thisFactory.gatherables).map(function (key) {\n	        		return thisFactory.gatherables[key];\n	        	});\n	    	};\n	    	this.updateGatherables();\n\n	        // Harvestables\n	        this.harvestables = {};  \n	        json.harvestables.forEach( ( function(thisHarvestable) {\n	          	this.harvestables[thisHarvestable.name] = new FSHarvestable(thisHarvestable, this);\n	        }).bind(this)); \n	        this.updateHarvestables = function() {\n	        	thisFactory.harvestablesArray = Object.keys(thisFactory.harvestables).map(function (key) {\n	        		return thisFactory.harvestables[key];\n	        	});\n	    	};\n	    	this.updateHarvestables();\n\n			// Bank\n	        this.bank = {};  \n	        json.bank.forEach( ( function(item) {\n	        	var category = 'unknown';\n	        	if ( this.toolDefines.hasOwnProperty(item.name) === true) \n	        	{\n	        		category = 'tool';\n	        	} else if ( this.foodDefines.hasOwnProperty(item.name) === true) {\n	        		category = 'food';\n	        	}\n	          	this.bank[item.name] = new FSBackpack({'category':category, 'name':item.name});\n	       		this.bank[item.name].increment( item.quantity );\n	        }).bind(this)); \n	        this.updateBank = function() {\n		        thisFactory.bankArray = Object.keys(thisFactory.bank).map(function (key) {\n		        		return thisFactory.bank[key];\n		        	});\n	    	};\n	    	this.updateBank();\n\n	        // Know Recipes\n	        this.knownRecipes = {}; \n	        json.recipes.forEach( ( function( recipeName ) {\n	          		this.knownRecipes[recipeName] =  new FSRecipe( recipeName, this);\n	        	}).bind(this)); \n	        this.updateRecipes = function() {\n		        thisFactory.knownRecipesArray = Object.keys(thisFactory.knownRecipes).map(function (key) {\n		        		return thisFactory.knownRecipes[key];\n		        	});\n	    	};\n	    	this.updateRecipes();\n\n\n	    	//rewards\n	    	this.rewards = [];\n	    	json.rewards.forEach( ( function(thisReward) {\n	          	this.rewards.push(thisReward);\n	        }).bind(this)); \n\n	    };\n\n\n\n	      /**\n		 * @desc \n		 * @return \n		 */\n    	this.deserialize = function ( ) {\n\n    		var buildjson = {};\n\n    		buildjson.harvestableDefines = this.harvestableDefines;  \n	        buildjson.gatherableDefines = this.gatherableDefines;  \n	        buildjson.toolDefines = this.toolDefines;  \n	        buildjson.foodDefines = this.foodDefines;  \n	        buildjson.recipesDefines = this.recipeDefines; \n	        buildjson.rewardRules = this.rewardRules;   \n\n\n	     	// Characters\n		    buildjson.characters = [];  \n	        for ( var thisCharacter in this.characterObjs) {\n	        	buildjson.characters.push( this.characterObjs[thisCharacter].json);\n	        }\n\n	        // Gatherables\n	        buildjson.gatherables = [];  \n	        for ( var thisGatherables in this.gatherables) {\n	        	buildjson.gatherables.push( this.gatherables[thisGatherables].json);\n	        } \n	\n	        // Harvestables\n	        buildjson.harvestables = [];  \n	        for ( var thisHarvestable in this.harvestables) {\n	        	var harvestObj = { 'name' : this.harvestables[thisHarvestable].name, 'quantity' : this.harvestables[thisHarvestable].quantity};\n	          	buildjson.harvestables.push(harvestObj);\n	        }\n\n			// Bank\n	        buildjson.bank = [];  \n	        for ( var item in this.bank) {\n	        	var bankobj = { 'name' : this.bank[item].name, 'quantity' : this.bank[item].quantity.length};\n	        	buildjson.bank.push(bankobj);\n	        }\n\n	        // Know Recipes\n	        buildjson.recipes = []; \n	        for ( var recipeName in this.knownRecipes) {\n	        	buildjson.recipes.push(this.knownRecipes[recipeName].name);\n	        }\n\n\n\n	        this.jsonSerialized = JSON.stringify(buildjson, undefined, 2);\n\n	        return buildjson;\n    	};\n\n	      /**\n		 * @desc \n		 * @return \n		 */\n    	this.ctrllrScopeApply = function ( ) {\n    		 ctrllerScope.$apply();\n    	};\n	\n\n	    /**\n		 * @desc - order table by field values\n		 * @return \n		 */\n    	this.onClickHeader = function ( tableName, fieldName) {\n			switch ( tableName) {\n				case 'Bank':\n					if ( this.hasOwnProperty('orderBankBy') === false) {\n						this.orderBankBy = 'name';\n		        		this.orderBankByOrder = '+';\n	        		}\n        			this.orderBankByOrder = (this.orderBankByOrder==='+') ? '-' : '+';\n        			this.orderBankBy = this.orderBankByOrder + fieldName;\n        			break;\n        		case 'Gatherables':\n					if ( this.hasOwnProperty('orderGatherablesBy') === false) {\n        			    this.orderGatherablesBy = 'name';\n	        			this.orderGatherablesByOrder = '+';\n	    			}\n        			this.orderGatherablesByOrder = (this.orderGatherablesByOrder==='+') ? '-' : '+';\n        			this.orderGatherablesBy = this.orderGatherablesByOrder + fieldName;\n        			break;\n        		case 'Harvestables':\n        			if ( this.hasOwnProperty('orderHarvestablesBy') === false) {\n	        			this.orderHarvestablesBy = 'name';\n		        		this.orderHarvestablesByOrder = '+';\n	        		}\n        			this.orderHarvestablesByOrder = (this.orderHarvestablesByOrder==='+') ? '-' : '+';\n        			this.orderHarvestablesBy = this.orderHarvestablesByOrder + fieldName;\n        			break;\n        		 case 'Recipes':\n        			if ( this.hasOwnProperty('orderRecipesBy') === false) {\n	        			this.orderRecipesBy = 'name';\n		        		this.orderRecipesByOrder = '+';\n	        		}\n        			this.orderRecipesByOrder = (this.orderRecipesByOrder==='+') ? '-' : '+';\n        			this.orderRecipesBy = this.orderRecipesByOrder + fieldName;\n        			break;\n        	}\n	     };\n\n\n		/**\n		 * @desc \n		 * @return \n		 */\n		 this.onClickBody = function ( tableName, keyName) {\n	     	switch (tableName) {\n	     		case 'Bank':\n	     			this.onClickBank(keyName);\n	     			break;\n	     		case 'Gatherables':\n	     			this.onClickGatherables(keyName);\n	     			break;\n	     		case 'Harvestables':\n	     			this.onClickHarvestables(keyName);\n	     			break;\n	     		case 'Recipes':\n	     			this.onClickRecipes(keyName);\n	     			break;\n	     	}\n	 	 };\n\n\n		/**\n		 * @desc \n		 * @return \n		 */\n		this.checkRewards  = function ( checkDesc ) {\n\n			for (var thisRewardRule in this.rewardRules) {\n  				if (this.rewardRules.hasOwnProperty(thisRewardRule)) {\n  					if (this.rewardRules[thisRewardRule].action === checkDesc.action) {\n						if (this.rewardRules[thisRewardRule].target === checkDesc.target) {\n							\n							// reward reward\n							if ( this.rewards.indexOf(thisRewardRule) === -1) {\n								console.log('REWARD:' + thisRewardRule);\n								this.rewards.push(thisRewardRule);\n							}\n\n							// recipe unlocks\n							this.rewardRules[thisRewardRule].recipeUnlocks.forEach( function( recipe) {\n\n								if ( this.knownRecipes.hasOwnProperty(recipe) === false) {\n									if (this.hasOwnProperty(recipe) === false) {\n										this.knownRecipes[recipe] =  new FSRecipe( recipe, this);\n										this.updateRecipes();\n										console.log('RECIPE UNLOCK:' + recipe);\n									}\n								}\n\n							}.bind(this));\n\n						}\n					}\n  				}\n			}\n		};\n\n		 /**\n	     * @desc \n	     * @return \n	     */\n		this.rewardbgcolor = function ( rewardName ) {\n		     return  (this.rewards.indexOf(rewardName) === -1) ? '#FF0000' : '#00FF00';\n		};\n\n		 /**\n	     * @desc \n	     * @return \n	     */\n	    this.recipebgcolor = function( recipeName) {\n	      var hasResources = true;\n	      for (var key in this.recipeDefines[recipeName].input) {\n	          if (this.recipeDefines[recipeName].input.hasOwnProperty(key)) {\n\n	              if (key in this.bank) {\n	                if ( this.bank[key].quantity.length < this.recipeDefines[recipeName].input[key] ) {\n	                  hasResources = false;\n	                }\n	            } else {\n	              hasResources = false;\n	            }\n	          }\n	      }\n	      return  (hasResources === true) ? '#00FF00' : '#FF0000';\n	    };\n\n		/**\n		 * @desc \n		 * @return \n		 */\n		 this.onClickCharacterTool = function ( toolObj) {\n\n		      var indexOf = this.selectedCharacter.json.tools.indexOf(toolObj);\n		      if ( indexOf !== -1) {\n		      	this.selectedCharacter.json.tools.splice(indexOf, 1);\n\n		      	 if (!(toolObj.name in thisFactory.bank)) {\n        			thisFactory.bank[toolObj.name] = new FSBackpack({'category':'tool', 'name':toolObj.name});\n			      }\n			      thisFactory.bank[toolObj.name].increment(1);\n			      thisFactory.updateBank();\n		      }\n		 };\n\n		 /**\n		 * @desc \n		 * @return \n		 */\n		 this.onClickCharacterWeapon = function ( weaponObj) {\n\n		      var indexOf = this.selectedCharacter.json.weapons.indexOf(weaponObj);\n		      if ( indexOf !== -1) {\n		      	this.selectedCharacter.json.weapons.splice(indexOf, 1);\n\n		      	 if (!(weaponObj.name in thisFactory.bank)) {\n        			thisFactory.bank[weaponObj.name] = new FSBackpack({'category':'weapon', 'name':weaponObj.name});\n			      }\n			      thisFactory.bank[weaponObj.name].increment(1);\n			      thisFactory.updateBank();\n		      }\n		 };\n\n		/**\n		 * @desc \n		 * @return \n		 */\n		this.onClickBank = function (bankItemKey) {\n\n        	switch ( this.bank[bankItemKey].category ) {\n        		case 'tool': { // add to character inventory \n	        		if (this.bank[bankItemKey].quantity.length > 0) {\n	        			this.bank[bankItemKey].decrement(1) ;\n	        			this.selectedCharacter.json.tools.push( new FSBackpack( {'category':this.bank[bankItemKey].category, 'name':this.bank[bankItemKey].name} ));\n\n	        			if ( this.bank[bankItemKey].quantity.length === 0) {\n	        				delete  this.bank[bankItemKey];\n	        				this.updateBank();\n	        			}\n	        		}\n        		}\n        		break;\n\n        		case 'food': { // consume\n	        		if (this.bank[bankItemKey].quantity.length > 0) {\n	        			this.bank[bankItemKey].decrement(1) ;\n\n						for (var statType in this.foodDefines[bankItemKey].onConsume.stat) {\n							for (var statSubType in this.foodDefines[bankItemKey].onConsume.stat[statType]) {\n								var delta = parseInt(this.foodDefines[bankItemKey].onConsume.stat[statType][statSubType], 10);\n								//this.selectedCharacter.json.stats[statType][statSubType] = parseInt(this.selectedCharacter.json.stats[statType][statSubType]);\n\n								this.selectedCharacter.modifyStat( statType, statSubType, delta);\n								//this.selectedCharacter.json.stats[statType][statSubType] += parseInt(delta, 10);\n							}\n						}\n\n	        			if ( this.bank[bankItemKey].quantity.length === 0) {\n	        				delete this.bank[bankItemKey];\n	        				this.updateBank();\n	        			}\n	        		}\n        		}\n        		break;\n\n        		case 'weapon': { // add to character inventory \n	        		if (this.bank[bankItemKey].quantity.length > 0) {\n	        			this.bank[bankItemKey].decrement(1) ;\n	        			this.selectedCharacter.json.weapons.push( new FSBackpack( {'category':this.bank[bankItemKey].category, 'name':this.bank[bankItemKey].name} ));\n\n	        			if ( this.bank[bankItemKey].quantity.length === 0) {\n	        				delete  this.bank[bankItemKey];\n	        				this.updateBank();\n	        			}\n	        		}\n        		}\n        		break;\n        	}\n\n		};\n\n		/**\n		 * @desc \n		 * @return \n		 */\n		this.onClickGatherables = function (gatherableType) {\n	\n			if ( this.selectedCharacter !== null) {\n			    this.selectedCharacter.startGathering( gatherableType);\n			}\n		};\n\n		/**\n		 * @desc \n		 * @return \n		 */\n		this.onClickHarvestables = function (harvestableType) {\n			if ( this.selectedCharacter !== null) {\n			    this.selectedCharacter.startHarvesting( harvestableType);\n			}\n		};\n\n		/**\n		 * @desc \n		 * @return \n		 */\n		this.onClickRecipes = function (recipeKey) {\n		   	// determine if has reqiored ingredients in bank\n		   	var hasIngredients = true;\n		    var recipeInputObj = this.recipeDefines[recipeKey].input;\n			var recipeInputKeys = Object.keys( recipeInputObj );\n\n			recipeInputKeys.forEach( function ( recipeKey ) {\n				var recipeInput = recipeKey;\n				var recipeInputQuantity = recipeInputObj[ recipeKey];\n\n				if (recipeInput in this.bank) {\n					if ( this.bank[ recipeInput ].quantity.length < recipeInputQuantity) {\n						hasIngredients = false;\n						console.log('does not have ingredient quantity:' + recipeInput + ', ' + recipeInputQuantity);\n					}\n				} else {\n					console.log('does not have ingredient:' + recipeInput);\n					hasIngredients = false;\n				}\n			}.bind(this));\n\n			console.log('has ingredients:' + hasIngredients);\n\n\n			if ( this.recipeDefines[recipeKey].construction.length > 0) {\n\n				var constructor = this.recipeDefines[recipeKey].construction[0];\n				if ( this.bank.hasOwnProperty(constructor) === false) {\n					hasIngredients = false;\n					console.log('does not have constructor:' + constructor);\n				} else {\n					console.log('has constructor :' + constructor);\n				}\n			}\n			\n			if ( hasIngredients === true) {\n\n			    if ( this.selectedCharacter !== null && this.selectedCharacter.json.activity.length < 4) {\n\n		          	this.selectedCharacter.startCrafting( recipeKey);\n\n		          	// subtract resources from bank.\n		          	recipeInputKeys.forEach( function ( recipeKey ){\n\n						var recipeInput = recipeKey;\n						var recipeInputQuantity = recipeInputObj[ recipeKey];\n\n						this.bank[ recipeInput ].decrement( recipeInputQuantity);\n\n						if ( this.bank[recipeInput].quantity.length === 0) {\n	        				delete  this.bank[recipeInput];\n	        				this.updateBank();\n	        			}\n	\n					}.bind(this));\n			    }\n			}\n		};\n\n	   \n  	};\n\n	/**\n	* Return the constructor function.\n	*/\n	return FSSimFactory;\n});\n",
			"file": "app/scripts/services/fssimfactory.js",
			"file_size": 15416,
			"file_write_time": 1437006963000000,
			"settings":
			{
				"buffer_size": 15484,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/recipes.html",
			"settings":
			{
				"buffer_size": 875,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/reference.html",
			"settings":
			{
				"buffer_size": 4897,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/characterselect.html",
			"settings":
			{
				"buffer_size": 2165,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/scripts/services/fscharacter.js",
			"settings":
			{
				"buffer_size": 16832,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/main.html",
			"settings":
			{
				"buffer_size": 1952,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/colinmoore/dev/crafty/app/views/contextinfoconsole.html",
			"settings":
			{
				"buffer_size": 320,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/colinmoore/Perforce/cmoore_MBP/crafty/rules.json",
		"/Users/colinmoore/Perforce/cmoore_MBP/crafty/state.json",
		"/Users/colinmoore/Dev/crafty/app/views/harvestables.html",
		"/Users/colinmoore/Dev/crafty/app/views/recipes.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimfactory.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fscharacter.js",
		"/Users/colinmoore/Dev/crafty/app/views/characterselect.html",
		"/Users/colinmoore/Dev/crafty/app/views/main.html",
		"/Users/colinmoore/Dev/crafty/app/index.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsrecipe.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsharvestable.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsgatherable.js",
		"/Users/colinmoore/Dev/crafty/app/views/rewards.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsreward.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsservice.js",
		"/Users/colinmoore/dev/crafty/app/json/state.json",
		"/Users/colinmoore/Dev/crafty/app/json/rules.json",
		"/Users/colinmoore/Dev/crafty/app/crafty.json",
		"/Users/colinmoore/dev/crafty/app/json/defintions.json",
		"/Users/colinmoore/dev/crafty/app/json/crafty.json",
		"/Users/colinmoore/dev/crafty/app/json/defines.json",
		"/Users/colinmoore/Downloads/sourcetree.license",
		"/Users/colinmoore/dev/Electoral-System-Simulator/app/index.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsbackpack.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/controllers/about.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/controllers/main.js",
		"/Users/colinmoore/dev/crafty/app/json/rules.json",
		"/Users/colinmoore/dev/craftydb/craftydb.js",
		"/Users/colinmoore/Perforce/cmoore_MBP/crafty/smallerdataset.json",
		"/Users/colinmoore/dev/crafty/app/views/db.html",
		"/Users/colinmoore/dev/craftydb/craftydbapp.js",
		"/Users/colinmoore/Dev/crafty/db/craftydb.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/app.js",
		"/Users/colinmoore/Dev/crafty/app/views/charactersheetstats.html",
		"/Users/colinmoore/Dev/crafty/app/views/charactersheet.html",
		"/Users/colinmoore/Dev/crafty/app/views/reference.html",
		"/Users/colinmoore/dev/Electoral-System-Simulator/app/scripts/services/electionservice.js",
		"/Users/colinmoore/dev/craftydb/publishToEC2.sh",
		"/Users/colinmoore/Dev/crafty/logs/[ec2-user@ip-172-31-38-189 html]$ npm list -g",
		"/Users/colinmoore/Dev/crafty/db/craftydbapp.js",
		"/Users/colinmoore/dev/craftydb/node_modules/body-parser/package.json",
		"/Users/colinmoore/dev/crafty/db/package.json",
		"/Users/colinmoore/dev/crafty/app/scripts/services/fssimfactory.js",
		"/Users/colinmoore/Dev/crafty/app/views/gatherables.html",
		"/Users/colinmoore/dev/crafty/app/views/charactersheetstats.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/stopwatch.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsfactory.js",
		"/Users/colinmoore/Desktop/provisioning/iOSDistributionNAE453G6R2commagicfuelgames.mobileprovision",
		"/Users/colinmoore/Dev/crafty/app/views/crafting.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fstask.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsrecipedef.js",
		"/Users/colinmoore/dev/crafty/app/views/bank.html",
		"/Users/colinmoore/dev/crafty/app/views/crafting.html",
		"/Users/colinmoore/dev/crafty/app/views/main.html",
		"/Users/colinmoore/dev/crafty/app/views/harvestables.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsobject.js",
		"/Users/colinmoore/dev/crafty/app/views/gatherables.html",
		"/Users/colinmoore/dev/crafty/app/views/recipes.html",
		"/Users/colinmoore/Dev/crafty/app/styles/main.css",
		"/private/tmp/colinmoore(p4v)/Colins-MBP.home_ec2-54-67-81-203.us-west-1.compute.amazonaws.com_1666/ST_Prototypes/ML/crafty/smallerdataset#1.json",
		"/Users/colinmoore/Dev/crafty/bower.json",
		"/Users/colinmoore/Dev/minecraft/pullMinecraft.sh",
		"/Users/colinmoore/Dev/crafty/publishToEC2.sh",
		"/Users/colinmoore/Dev/crafty/Gruntfile.js",
		"/Users/colinmoore/Dev/crafty/.yo-rc.json",
		"/Users/colinmoore/Dropbox (MagicFuelGames)/MagicFuelGames Team Folder/Software/Prototypes/Web/crafty/smallerdataset.json",
		"/Users/colinmoore/Dropbox (MagicFuelGames)/MagicFuelGames Team Folder/Software/Prototypes/Web/crafty/smallerdataset2.json",
		"/Users/colinmoore/Dev/crafty/.tmp/concat/scripts/scripts.js",
		"/Users/colinmoore/Dev/crafty/test/spec/services/fsgameitem.js",
		"/Users/colinmoore/Dev/crafty/dist/scripts/scripts.4a49449a.js",
		"/Users/colinmoore/Dev/crafty/crafty.sublime-workspace",
		"/Users/colinmoore/Dev/crafty/app/scripts/controllers/characterctrlr.js",
		"/Users/colinmoore/Dev/crafty/app/views/character.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsgameitem.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsgatherables.js",
		"/Users/colinmoore/Dev/col42dev.github.com/index.im",
		"/Users/colinmoore/Dev/planetary/tests/planetary.js",
		"/Users/colinmoore/Dev/site/index.html",
		"/Users/colinmoore/{",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsbank.js",
		"/Users/colinmoore/Dev/site/fonts/snneonoire-regular-webfont.svg",
		"/Users/colinmoore/Dev/site/css/styles.css",
		"/Users/colinmoore/Dev/dungeoneering/publishToEC2.sh",
		"/Users/colinmoore/Dev/dungeoneering.QuadTiles/publishToEC2.sh",
		"/Users/colinmoore/Dev/dungeoneering/.gitignore",
		"/Users/colinmoore/Dev/crafty/app/scripts/controllers/crafty.json",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/crafty.json",
		"/Users/colinmoore/Dev/crafty/crafty.json",
		"/Users/colinmoore/crafty",
		"/Users/colinmoore/Dev/crafty/package.json",
		"/Users/colinmoore/Dev/crafty/.gitignore",
		"/Users/colinmoore/publishToEC2.sh",
		"/Users/colinmoore/Downloads/publishToEC2.sh"
	],
	"find":
	{
		"height": 36.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/Users/colinmoore/Dev/crafty/app",
			"/Users/colinmoore/Dev/crafty/app/views",
			"/Users/colinmoore/Dev/crafty/app/scripts",
			"/Users/colinmoore/Dev/crafty"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Grain",
			"craftBaseTimeS",
			"recipesDefines",
			"recipeDef",
			"FSReward",
			"statUpdateInt",
			"startUpdateInt",
			"gathe",
			"taskRules",
			"rewards",
			"reward",
			"forEach",
			"knownRecipes",
			"rewardRules",
			"stopCraft",
			"stopCra",
			"knownRecipes",
			"reward",
			"rewar",
			"reward",
			"recipesDefines",
			"recipeDefines",
			"recipe",
			"recipes",
			"checkRewards",
			"input",
			"':",
			"loc",
			"recipeDef",
			"body",
			"req.b",
			"mongodb",
			"databaseUrl",
			"mongo",
			"FSObject",
			"{\n  \"app\": \"crafty\",\n  \"version\": \"0.0.0\",\n  \"characters\": [\n    {\n      \"name\": \"Stroldrin Harvester\",\n      \"profession\": \"harvesting\",\n      \"image\": \"http://www.3drt.com/3dm/characters/dark-knights/dark-knight-fantasy-character-lowpoly_05.jpg\",\n      \"stats\": {\n        \"health\": {\n          \"current\": \"100\",\n          \"max\": \"100\",\n          \"regeneratePeriod\": \"5\"\n        },\n        \"energy\": {\n          \"current\": \"50\",\n          \"max\": \"100\",\n          \"regeneratePeriod\": \"5\"\n        },\n        \"mind\": {\n          \"current\": \"20\",\n          \"max\": \"100\",\n          \"regeneratePeriod\": \"5\"\n        }\n      }\n    },\n    {\n      \"name\": \"Gronderlug Crafter\",\n      \"profession\": \"crafting\",\n      \"image\": \"https://s-media-cache-ak0.pinimg.com/originals/f9/f3/d4/f9f3d4e8af9671c04c53351de58f1173.jpg\",\n      \"stats\": {\n        \"health\": {\n          \"current\": \"10\",\n          \"max\": \"100\",\n          \"regeneratePeriod\": \"5\"\n        },\n        \"energy\": {\n          \"current\": \"100\",\n          \"max\": \"100\",\n          \"regeneratePeriod\": \"5\"\n        },\n        \"mind\": {\n          \"current\": \"100\",\n          \"max\": \"100\",\n          \"regeneratePeriod\": \"5\"\n        }\n      }\n    },\n    {\n      \"name\": \"Dorasgrour Server\",\n      \"profession\": \"services\",\n      \"image\": \"http://3drt.com/store/images/detailed/5/thief-3d-character-fantasy-lowpoly_06.jpg?t=1431440642\",\n      \"stats\": {\n        \"health\": {\n          \"current\": \"100\",\n          \"max\": \"100\",\n          \"regeneratePeriod\": \"5\"\n        },\n        \"energy\": {\n          \"current\": \"100\",\n          \"max\": \"100\",\n          \"regeneratePeriod\": \"5\"\n        },\n        \"mind\": {\n          \"current\": \"20\",\n          \"max\": \"100\",\n          \"regeneratePeriod\": \"5\"\n        }\n      }\n    },\n    {\n      \"name\": \"Skoveath Harvester\",\n      \"profession\": \"harvesting\",\n      \"image\": \"http://3drt.com/store/images/detailed/5/thief-3d-character-fantasy-lowpoly_05.jpg?t=1431440642\",\n      \"stats\": {\n        \"health\": {\n          \"current\": \"100\",\n          \"max\": \"100\",\n          \"regeneratePeriod\": \"5\"\n        },\n        \"energy\": {\n          \"current\": \"100\",\n          \"max\": \"100\",\n          \"regeneratePeriod\": \"5\"\n        },\n        \"mind\": {\n          \"current\": \"100\",\n          \"max\": \"100\",\n          \"regeneratePeriod\": \"5\"\n        }\n      }\n    }\n  ],\n  \"gatherables\": [\n    {\n      \"name\": \"Stone\",\n      \"quantity\": \"1\"\n    },\n    {\n      \"name\": \"Coal\",\n      \"quantity\": \"1\"\n    },\n    {\n      \"name\": \"Iron Ore\",\n      \"quantity\": \"3\"\n    },\n    {\n      \"name\": \"Water\",\n      \"quantity\": \"100\"\n    },\n    {\n      \"name\": \"Wood\",\n      \"quantity\": \"5\"\n    },\n    {\n      \"name\": \"Wool\",\n      \"quantity\": \"10\"\n    },\n    {\n      \"name\": \"Leaves\",\n      \"quantity\": \"100\"\n    },\n    {\n      \"name\": \"Grain\",\n      \"quantity\": \"20\"\n    },\n    {\n      \"name\": \"Antler\",\n      \"quantity\": \"9\"\n    },\n    {\n      \"name\": \"Sand\",\n      \"quantity\": \"20\"\n    },\n    {\n      \"name\": \"Feather\",\n      \"quantity\": \"5\"\n    }\n  ],\n  \"harvestables\": [\n    {\n      \"name\": \"Earth\",\n      \"quantity\": \"100\"\n    },\n    {\n      \"name\": \"Stone\",\n      \"quantity\": \"100\"\n    },\n    {\n      \"name\": \"Hard Stone\",\n      \"quantity\": \"100\"\n    },\n    {\n      \"name\": \"Quartzstone\",\n      \"quantity\": \"100\"\n    },\n    {\n      \"name\": \"Limestone\",\n      \"quantity\": \"100\"\n    },\n    {\n      \"name\": \"Marble\",\n      \"quantity\": \"100\"\n    },\n    {\n      \"name\": \"Granite\",\n      \"quantity\": \"100\"\n    },\n    {\n      \"name\": \"Coal\",\n      \"quantity\": \"100\"\n    },\n    {\n      \"name\": \"Iron Ore\",\n      \"quantity\": \"100\"\n    },\n    {\n      \"name\": \"Wood\",\n      \"quantity\": \"100\"\n    }\n  ],\n  \"bank\": [\n    {\n      \"name\": \"Titanium Pickaxe\",\n      \"quantity\": 1\n    },\n    {\n      \"name\": \"Bucket\",\n      \"quantity\": 1\n    },\n    {\n      \"name\": \"Minecart\",\n      \"quantity\": 1\n    },\n    {\n      \"name\": \"FlagonOfAle\",\n      \"quantity\": 3\n    }\n  ],\n  \"recipes\": [\n    \"Rope\",\n    \"WoodenTable\",\n    \"Workbench\",\n    \"Forge\",\n    \"AntlerPickaxe\",\n    \"Paper\",\n    \"Books\",\n    \"FineHat\",\n    \"FlagonOfAle\",\n    \"WoodenPlanks\",\n    \"DiceTable\",\n    \"Minecart\",\n    \"Loom\",\n    \"Glass\",\n    \"Shovel\",\n    \"Cloth\",\n    \"Nails\",\n    \"BackPack\",\n    \"Saw\",\n    \"Bucket\",\n    \"Ale\",\n    \"FermentingVat\",\n    \"BucketPump\",\n    \"Scythe\",\n    \"StoneAxe\",\n    \"BulkAle\",\n    \"PumpedWater\"\n  ],\n  \"rewardDefines\": [\n    {\n      \"name\": \"Liquidated\",\n      \"desc\": \"Craft a FlagonOfAle\",\n      \"completed\": \"0\",\n      \"action\": \"craft\",\n      \"target\": \"FlagonOfAle\"\n    },\n    {\n      \"name\": \"Quench\",\n      \"desc\": \"Craft a Bucket\",\n      \"completed\": \"0\",\n      \"action\": \"craft\",\n      \"target\": \"Bucket\"\n    },\n    {\n      \"name\": \"Master Brewer\",\n      \"desc\": \"Craft a FermentingVat\",\n      \"completed\": \"0\",\n      \"action\": \"craft\",\n      \"target\": \"FermentingVat\"\n    }\n  ],\n  \"gatherableDefines\": {\n    \"Earth\": {\n      \"gatherBaseTimeS\": \"10\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    },\n    \"Stone\": {\n      \"gatherBaseTimeS\": \"10\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    },\n    \"Hard Stone\": {\n      \"gatherBaseTimeS\": \"10\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    },\n    \"Quartzstone\": {\n      \"gatherBaseTimeS\": \"10\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    },\n    \"Limestone\": {\n      \"gatherBaseTimeS\": \"10\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    },\n    \"Marble\": {\n      \"gatherBaseTimeS\": \"10\",\n      \"actionable\": [\n        \"Cart\"\n      ]\n    },\n    \"Granite\": {\n      \"gatherBaseTimeS\": \"10\",\n      \"actionable\": [\n        \"Cart\"\n      ]\n    },\n    \"Coal\": {\n      \"gatherBaseTimeS\": \"20\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    },\n    \"Iron Ore\": {\n      \"gatherBaseTimeS\": \"20\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    },\n    \"Water\": {\n      \"gatherBaseTimeS\": \"10\",\n      \"actionable\": [\n        \"CarryLiquid\"\n      ]\n    },\n    \"Wood\": {\n      \"gatherBaseTimeS\": \"15\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    },\n    \"Wool\": {\n      \"gatherBaseTimeS\": \"30\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    },\n    \"Leaves\": {\n      \"gatherBaseTimeS\": \"10\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    },\n    \"Grain\": {\n      \"gatherBaseTimeS\": \"20\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    },\n    \"Antler\": {\n      \"gatherBaseTimeS\": \"120\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    },\n    \"Sand\": {\n      \"gatherBaseTimeS\": \"30\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    },\n    \"Feather\": {\n      \"gatherBaseTimeS\": \"60\",\n      \"actionable\": [\n        \"Carry\"\n      ]\n    }\n  },\n  \"harvestableDefines\": {\n    \"Earth\": {\n      \"actionable\": [\n        \"Dig\"\n      ],\n      \"hardness\": \"1\",\n      \"harvestBaseTimeS\": \"10\"\n    },\n    \"Stone\": {\n      \"actionable\": [\n        \"Dig\"\n      ],\n      \"hardness\": \"2\",\n      \"harvestBaseTimeS\": \"18\"\n    },\n    \"Hard Stone\": {\n      \"actionable\": [\n        \"Dig\"\n      ],\n      \"hardness\": \"8\",\n      \"harvestBaseTimeS\": \"64\"\n    },\n    \"Quartzstone\": {\n      \"actionable\": [\n        \"Dig\"\n      ],\n      \"hardness\": \"20\",\n      \"harvestBaseTimeS\": \"140\"\n    },\n    \"Limestone\": {\n      \"actionable\": [\n        \"Dig\"\n      ],\n      \"hardness\": \"5\",\n      \"harvestBaseTimeS\": \"45\"\n    },\n    \"Marble\": {\n      \"actionable\": [\n        \"Dig\"\n      ],\n      \"hardness\": \"12\",\n      \"harvestBaseTimeS\": \"96\"\n    },\n    \"Granite\": {\n      \"actionable\": [\n        \"Dig\"\n      ],\n      \"hardness\": \"16\",\n      \"harvestBaseTimeS\": \"112\"\n    },\n    \"Coal\": {\n      \"actionable\": [\n        \"Dig\"\n      ],\n      \"hardness\": \"3\",\n      \"harvestBaseTimeS\": \"50\"\n    },\n    \"Iron Ore\": {\n      \"actionable\": [\n        \"Dig\"\n      ],\n      \"hardness\": \"3\",\n      \"harvestBaseTimeS\": \"50\"\n    },\n    \"Wood\": {\n      \"actionable\": [\n        \"Chop\",\n        \"Saw\"\n      ],\n      \"hardness\": \"2\",\n      \"harvestBaseTimeS\": \"10\"\n    }\n  },\n  \"toolDefines\": {\n    \"Hands\": {\n      \"strength\": \"2\",\n      \"actions\": [\n        \"Dig\",\n        \"Chop\",\n        \"Carry\"\n      ]\n    },\n    \"Stone Pickaxe\": {\n      \"strength\": \"3\",\n      \"actions\": [\n        \"Dig\"\n      ]\n    },\n    \"Bronze Pickaxe\": {\n      \"strength\": \"5\",\n      \"actions\": [\n        \"Dig\"\n      ]\n    },\n    \"Iron Pickaxe\": {\n      \"strength\": \"8\",\n      \"actions\": [\n        \"Dig\"\n      ]\n    },\n    \"Steel Pickaxe\": {\n      \"strength\": \"12\",\n      \"actions\": [\n        \"Dig\"\n      ]\n    },\n    \"Silver Pickaxe\": {\n      \"strength\": \"17\",\n      \"actions\": [\n        \"Dig\"\n      ]\n    },\n    \"Gold Pickaxe\": {\n      \"strength\": \"23\",\n      \"actions\": [\n        \"Dig\"\n      ]\n    },\n    \"Titanium Pickaxe\": {\n      \"strength\": \"32\",\n      \"actions\": [\n        \"Dig\"\n      ]\n    },\n    \"AntlerPickaxe\": {\n      \"strength\": \"3\",\n      \"actions\": [\n        \"Dig\"\n      ]\n    },\n    \"Rope\": {\n      \"strength\": \"2\",\n      \"actions\": [\n        \"Tie\"\n      ]\n    },\n    \"BackPack\": {\n      \"strength\": \"3\",\n      \"actions\": [\n        \"Carry\"\n      ]\n    },\n    \"Shovel\": {\n      \"strength\": \"3\",\n      \"actions\": [\n        \"Dig\"\n      ]\n    },\n    \"Minecart\": {\n      \"strength\": \"3\",\n      \"actions\": [\n        \"Cart\",\n        \"Carry\"\n      ]\n    },\n    \"Saw\": {\n      \"strength\": \"3\",\n      \"actions\": [\n        \"Saw\"\n      ]\n    },\n    \"Bucket\": {\n      \"strength\": \"4\",\n      \"actions\": [\n        \"Carry\",\n        \"CarryLiquid\"\n      ]\n    }\n  },\n  \"recipesDefines\": {\n    \"Rope\": {\n      \"category\": \"tool\",\n      \"construction\": [\n\n      ],\n      \"input\": {\n        \"Wool\": \"1\"\n      },\n      \"output\": {\n        \"Rope\": \"3\"\n      },\n      \"basetime\": \"15\"\n    },\n    \"WoodenTable\": {\n      \"category\": \"constructor\",\n      \"construction\": [\n\n      ],\n      \"input\": {\n        \"Wood\": \"4\"\n      },\n      \"output\": {\n        \"WoodenTable\": \"1\"\n      },\n      \"basetime\": \"30\"\n    },\n    \"Workbench\": {\n      \"category\": \"constructor\",\n      \"construction\": [\n\n      ],\n      \"input\": {\n        \"Wood\": \"3\",\n        \"WoodenTable\": \"1\"\n      },\n      \"output\": {\n        \"Workbench\": \"1\"\n      },\n      \"basetime\": \"30\"\n    },\n    \"BackPack\": {\n      \"category\": \"tool\",\n      \"construction\": [\n\n      ],\n      \"input\": {\n        \"Cloth\": \"3\",\n        \"Rope\": \"1\"\n      },\n      \"output\": {\n        \"BackPack\": \"1\"\n      },\n      \"basetime\": \"30\"\n    },\n    \"Forge\": {\n      \"category\": \"constructor\",\n      \"construction\": [\n        \"Workbench\"\n      ],\n      \"input\": {\n        \"Water\": \"3\",\n        \"Coal\": \"1\",\n        \"Iron Ore\": \"3\",\n        \"Stone\": \"2\"\n      },\n      \"output\": {\n        \"Forge\": \"1\"\n      },\n      \"basetime\": \"60\"\n    },\n    \"Paper\": {\n      \"category\": \"unclassified\",\n      \"construction\": [\n        \"WoodenTable\"\n      ],\n      \"input\": {\n        \"Leaves\": \"1\"\n      },\n      \"output\": {\n        \"Paper\": \"1\"\n      },\n      \"basetime\": \"15\"\n    },\n    \"Books\": {\n      \"category\": \"unclassified\",\n      \"construction\": [\n        \"WoodenTable\"\n      ],\n      \"input\": {\n        \"Paper\": \"12\",\n        \"Rope\": \"1\",\n        \"Feather\": \"2\"\n      },\n      \"output\": {\n        \"Books\": \"1\"\n      },\n      \"basetime\": \"45\"\n    },\n    \"FineHat\": {\n      \"category\": \"unclassified\",\n      \"construction\": [\n        \"WoodenTable\"\n      ],\n      \"input\": {\n        \"Cloth\": \"2\",\n        \"Feather\": \"1\"\n      },\n      \"output\": {\n        \"FineHat\": \"1\"\n      },\n      \"basetime\": \"15\"\n    },\n    \"AntlerPickaxe\": {\n      \"category\": \"tool\",\n      \"construction\": [\n\n      ],\n      \"input\": {\n        \"Wood\": \"2\",\n        \"Antler\": \"2\"\n      },\n      \"output\": {\n        \"AntlerPickaxe\": \"1\"\n      },\n      \"basetime\": \"15\"\n    },\n    \"FlagonOfAle\": {\n      \"category\": \"food\",\n      \"construction\": [\n        \"WoodenTable\"\n      ],\n      \"input\": {\n        \"Ale\": \"6\",\n        \"Glass\": \"1\",\n        \"Cloth\": \"1\",\n        \"Antler\": \"6\"\n      },\n      \"output\": {\n        \"FlagonOfAle\": \"1\"\n      },\n      \"basetime\": \"15\"\n    },\n    \"WoodenPlanks\": {\n      \"category\": \"unclassified\",\n      \"construction\": [\n        \"Workbench\"\n      ],\n      \"input\": {\n        \"Wood\": \"2\"\n      },\n      \"output\": {\n        \"WoodenPlanks\": \"1\"\n      },\n      \"basetime\": \"15\"\n    },\n    \"DiceTable\": {\n      \"category\": \"furniture\",\n      \"construction\": [\n        \"Workbench\"\n      ],\n      \"input\": {\n        \"WoodenTable\": \"1\",\n        \"Antler\": \"3\",\n        \"Cloth\": \"1\"\n      },\n      \"output\": {\n        \"DiceTable\": \"1\"\n      },\n      \"basetime\": \"45\"\n    },\n    \"Minecart\": {\n      \"category\": \"unclassified\",\n      \"construction\": [\n        \"Workbench\"\n      ],\n      \"input\": {\n        \"WoodenPlanks\": \"4\",\n        \"Nails\": \"10\"\n      },\n      \"output\": {\n        \"Minecart\": \"1\"\n      },\n      \"basetime\": \"60\"\n    },\n    \"Loom\": {\n      \"category\": \"constructor\",\n      \"construction\": [\n        \"Workbench\"\n      ],\n      \"input\": {\n        \"Wood\": \"5\",\n        \"Rope\": \"2\"\n      },\n      \"output\": {\n        \"Loom\": \"1\"\n      },\n      \"basetime\": \"30\"\n    },\n    \"Glass\": {\n      \"category\": \"unclassified\",\n      \"construction\": [\n        \"Forge\"\n      ],\n      \"input\": {\n        \"Sand\": \"4\"\n      },\n      \"output\": {\n        \"Glass\": \"1\"\n      },\n      \"basetime\": \"45\"\n    },\n    \"Shovel\": {\n      \"category\": \"tool\",\n      \"construction\": [\n        \"Workbench\"\n      ],\n      \"input\": {\n        \"Wood\": \"3\"\n      },\n      \"output\": {\n        \"Shovel\": \"1\"\n      },\n      \"basetime\": \"15\"\n    },\n    \"Cloth\": {\n      \"category\": \"unclassified\",\n      \"construction\": [\n        \"Loom\"\n      ],\n      \"input\": {\n        \"Wool\": \"1\"\n      },\n      \"output\": {\n        \"Cloth\": \"1\"\n      },\n      \"basetime\": \"15\"\n    },\n    \"Ale\": {\n      \"category\": \"food\",\n      \"construction\": [\n        \"WoodenTable\"\n      ],\n      \"input\": {\n        \"Water\": \"6\",\n        \"Grain\": \"3\"\n      },\n      \"output\": {\n        \"Ale\": \"1\"\n      },\n      \"basetime\": \"45\"\n    },\n    \"Saw\": {\n      \"category\": \"tool\",\n      \"construction\": [\n        \"Forge\"\n      ],\n      \"input\": {\n        \"Iron Ore\": \"3\",\n        \"Wood\": \"1\"\n      },\n      \"output\": {\n        \"Saw\": \"1\"\n      },\n      \"basetime\": \"45\"\n    },\n    \"Bucket\": {\n      \"category\": \"tool\",\n      \"construction\": [\n\n      ],\n      \"input\": {\n        \"Wood\": \"3\",\n        \"Rope\": \"1\"\n      },\n      \"output\": {\n        \"Bucket\": \"1\"\n      },\n      \"basetime\": \"30\"\n    },\n    \"Nails\": {\n      \"category\": \"unclassified\",\n      \"construction\": [\n        \"Forge\"\n      ],\n      \"input\": {\n        \"Iron Ore\": \"1\"\n      },\n      \"output\": {\n        \"Nails\": \"5\"\n      },\n      \"basetime\": \"10\"\n    },\n    \"FermentingVat\": {\n      \"category\": \"constructor\",\n      \"construction\": [\n        \"Forge\"\n      ],\n      \"input\": {\n        \"Iron Ore\": \"3\",\n        \"Wood\": \"1\"\n      },\n      \"output\": {\n        \"FermentingVat\": \"1\"\n      },\n      \"basetime\": \"45\"\n    },\n    \"BulkAle\": {\n      \"category\": \"food\",\n      \"construction\": [\n        \"FermentingVat\"\n      ],\n      \"input\": {\n        \"Grain\": \"3\",\n        \"Water\": \"6\"\n      },\n      \"output\": {\n        \"Ale\": \"2\"\n      },\n      \"basetime\": \"60\"\n    },\n    \"BucketPump\": {\n      \"category\": \"constructor\",\n      \"construction\": [\n\n      ],\n      \"input\": {\n        \"Bucket\": \"2\",\n        \"Rope\": \"4\",\n        \"Wood\": \"2\"\n      },\n      \"output\": {\n        \"BucketPump\": \"1\"\n      },\n      \"basetime\": \"30\"\n    },\n    \"Scythe\": {\n      \"category\": \"tool\",\n      \"construction\": [\n        \"Forge\"\n      ],\n      \"input\": {\n        \"Iron Ore\": \"2\",\n        \"Wood\": \"2\"\n      },\n      \"output\": {\n        \"Scythe\": \"1\"\n      },\n      \"basetime\": \"45\"\n    },\n    \"StoneAxe\": {\n      \"category\": \"tool\",\n      \"construction\": [\n\n      ],\n      \"input\": {\n        \"Stone\": \"1\",\n        \"Wood\": \"1\"\n      },\n      \"output\": {\n        \"StoneAxe\": \"1\"\n      },\n      \"basetime\": \"60\"\n    },\n    \"PumpedWater\": {\n      \"category\": \"unclassified\",\n      \"construction\": [\n        \"BucketPump\"\n      ],\n      \"input\": {\n        \"Water\": \"1\"\n      },\n      \"output\": {\n        \"Water\": \"3\"\n      },\n      \"basetime\": \"10\"\n    }\n  },\n  \"foodDefines\": {\n    \"BulkAle\": {\n      \"onConsume\": {\n        \"stat\": {\n          \"energy\": {\n            \"current\": 50\n          },\n          \"mind\": {\n            \"current\": -50\n          }\n        }\n      }\n    },\n    \"FlagonOfAle\": {\n      \"onConsume\": {\n        \"stat\": {\n          \"energy\": {\n            \"current\": 50\n          },\n          \"mind\": {\n            \"current\": -50\n          }\n        }\n      }\n    },\n    \"Ale\": {\n      \"onConsume\": {\n        \"stat\": {\n          \"energy\": {\n            \"current\": 50\n          },\n          \"mind\": {\n            \"current\": -50\n          }\n        }\n      }\n    }\n  }\nFSObject",
			"FSFactory",
			"FSGatherable",
			"gather",
			"updateActiveTaskRemainingPercent",
			"activityCompletedCallback",
			"ctrllerScope",
			"tools",
			"weapon",
			"weapons",
			"tools",
			"weapons",
			"tools",
			"weapons",
			"tools",
			"weapons",
			"tools",
			"activity",
			"activ",
			"activity",
			"canPerformTask",
			"mod",
			"canPerformTask",
			"hasGatheringDependencies",
			"FlagonOfAle",
			"Ale",
			"Fla",
			"Flagon",
			"name",
			"Execution",
			"viewed",
			"viewed\nconstruct",
			"construct",
			"active",
			"works",
			"FSRecipe",
			"minec",
			"[\n",
			"Works",
			"},\n",
			"FlagonOfAle",
			"},\n",
			"lastNa",
			"gatherableDefines",
			"reward",
			"gameItems",
			"FSReward",
			"FSGameItem",
			");\n",
			"has dep",
			"updateActiveTaskRemainingPercent",
			"%';\n",
			"FSGatherable",
			"danc",
			"hasGatheringDependencies",
			"FSObject",
			"style",
			"thisFactory",
			"FSGameItemGameItem",
			"GameItem",
			"FSGatherable",
			"gather",
			"GameItem",
			"FSCharacter",
			"table",
			"startGat",
			"startgather",
			"ffffff",
			"bgcolor",
			"decrement",
			"activity",
			"onClickBank",
			"        \n",
			"Apply",
			"ApplyLinearImpulse",
			"selectedChar",
			"startGathering",
			"ctrllerScope",
			"selectedCharacter",
			"characterAr",
			"Silver ",
			"Tin",
			"Copper",
			"Iron",
			"Iron ",
			"Iron",
			"Iro Oren",
			"Iron",
			"stone",
			"viewedConstructor",
			"FSOb",
			"FSObj",
			"new FSObject"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"FSBackpack",
			"FSSimFactory",
			"recipeDef",
			"FSRecipeDef"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 7,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/colinmoore/Perforce/cmoore_MBP/crafty/state.json",
					"settings":
					{
						"buffer_size": 5405,
						"regions":
						{
						},
						"selection":
						[
							[
								338,
								338
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/colinmoore/Perforce/cmoore_MBP/crafty/rules.json",
					"settings":
					{
						"buffer_size": 23016,
						"regions":
						{
						},
						"selection":
						[
							[
								4575,
								4580
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3528.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app/scripts/services/fsservice.js",
					"settings":
					{
						"buffer_size": 7249,
						"regions":
						{
						},
						"selection":
						[
							[
								798,
								798
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 156.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "app/scripts/services/fssimfactory.js",
					"settings":
					{
						"buffer_size": 15484,
						"regions":
						{
						},
						"selection":
						[
							[
								1024,
								1024
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 7.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app/views/recipes.html",
					"settings":
					{
						"buffer_size": 875,
						"regions":
						{
						},
						"selection":
						[
							[
								624,
								634
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "app/views/reference.html",
					"settings":
					{
						"buffer_size": 4897,
						"regions":
						{
						},
						"selection":
						[
							[
								498,
								498
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "app/views/characterselect.html",
					"settings":
					{
						"buffer_size": 2165,
						"regions":
						{
						},
						"selection":
						[
							[
								767,
								767
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "app/scripts/services/fscharacter.js",
					"settings":
					{
						"buffer_size": 16832,
						"regions":
						{
						},
						"selection":
						[
							[
								1437,
								1437
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "app/views/main.html",
					"settings":
					{
						"buffer_size": 1952,
						"regions":
						{
						},
						"selection":
						[
							[
								1694,
								1694
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 623.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/Users/colinmoore/dev/crafty/app/views/contextinfoconsole.html",
					"settings":
					{
						"buffer_size": 320,
						"regions":
						{
						},
						"selection":
						[
							[
								206,
								206
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 296.0,
	"status_bar_visible": true
}
