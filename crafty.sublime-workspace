{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"h",
				"harvestables"
			],
			[
				"ca",
				"category"
			],
			[
				"get",
				"getTaskPercentRemaining"
			],
			[
				"gatherb",
				"gatherableDefines"
			],
			[
				"c",
				"category"
			],
			[
				"in",
				"indexOf"
			],
			[
				"harves",
				"harvestableDefines"
			],
			[
				"pr",
				"proficiency"
			],
			[
				"has",
				"hasOwnProperty"
			],
			[
				"up",
				"updateRecipes"
			],
			[
				"con",
				"constructor"
			],
			[
				"this",
				"thisActionable"
			],
			[
				"u",
				"updateGatherables"
			],
			[
				"a",
				"activity"
			],
			[
				"cons",
				"console"
			],
			[
				"l",
				"lastName"
			],
			[
				"ga",
				"gatherables"
			],
			[
				"for",
				"forEach"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "'use strict';\n\n/**\n * @ngdoc service\n * @name craftyApp.accounts\n * @description\n * # accounts\n * Service in the craftyApp.\n */\nangular.module('craftyApp')\n  .service('Accounts', function () {\n    // AngularJS will instantiate a singleton by calling \"new\" on this function.\n\n     var thisService = this;\n\n  	var dbdomain = 'localhost';\n    //dbdomain = 'ec2-54-201-237-107.us-west-2.compute.amazonaws.com';\n\n       /**\n     * @desc \n     * @return \n     */\n    this.saveJson = function() {\n    	/*\n      console.log('input:' + this.user.input); \n\n\n      var json = thisService.simulation.deserialize();\n      json['documentName'] =  thisService.documentName.input;\n      json = JSON.stringify(json, undefined, 2);\n      this.postjson(json);\n      */\n    };\n\n    /**\n     * @desc \n     * @return \n     */\n    this.loadAccounts = function() {\n\n        var url = 'http://' + dbdomain + ':8080/';\n        $http.get(url,{\n            params: {\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Request-Headers' : 'access-control-allow-origin'\n                }\n            }\n        }).success(function(data) {\n\n          console.log('Load accounts success');\n          thisService.accountsData = data;\n\n        }).error(function(data) {\n            data = data;\n            window.alert('loadAccounts failed for ' + url);\n        });\n\n    };\n\n     /**\n     * @desc \n     * @return \n     */\n    this.selectAccount = function(index) {\n      console.log('selectAccount' + index);\n\n      thisService.data = thisService.accountsData[Object.keys(thisService.accountsData)[index]];\n\n\n     //todo: split in to state and rules: setTimeout(thisService.createSim, 200);\n\n   \n    };\n\n     /**\n     * @desc \n     * @return \n     */\n    this.removeAllAccounts = function() {\n\n        var url = 'http://' + dbdomain + ':8080/removealldocuments';\n        $http.get(url,{\n            params: {\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Request-Headers' : 'access-control-allow-origin'\n                }\n            }\n        }).success( function(data) {\n\n          console.log('removeAllAccounts success');\n          thisService.accountsData = data;\n          //$scope.$apply();\n\n        }).error( function(data) {\n            data = data;\n            window.alert('removeAllAccounts failed for ' + url);\n        });\n\n    };\n\n\n    /**\n     * @desc \n     * @return \n     */\n    // curl -H \"Accept: application/json\" -H \"Content-type: application/json\" -X POST -d '{\"tag\":\"noob\",\"score\":43,\"date\":\"now\"}' http://ec2-54-213-75-45.us-west-2.compute.amazonaws.com:8080/score\n    this.postjson = function(jsondata) {   \n        $http.defaults.useXDomain = true;  \n        delete $http.defaults.headers.common['X-Requested-With'];          \n        $http({\n           // url: 'http://ec2-54-201-237-107.us-west-2.compute.amazonaws.com:8080/score',\n            url: 'http://' + dbdomain + ':8080/accounts',\n            method: 'POST',\n            data: jsondata,\n            headers: {'Content-Type': 'application/json'}\n        }).success(function (data, status, headers, config) {\n            //$scope.users = data.users; \n            //$location.path('/scores'); \n            window.alert('post success:' + status);\n        }).error(function (data, status, headers, config) {\n            //$scope.status = status + ' ' + headers;\n            window.alert('post error:' + status);\n            window.alert('post error:' + headers);\n        });\n    };\n\n  });\n",
			"file": "app/scripts/services/accounts.js",
			"file_size": 3575,
			"file_write_time": 130827394000000000,
			"settings":
			{
				"buffer_size": 3577,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "'use strict';\n\n/**\n * @ngdoc service\n * @name craftyApp.accounts\n * @description\n * # accounts\n * Service in the craftyApp.\n */\nangular.module('craftyApp')\n  .service('backendTimers', function () {\n    // AngularJS will instantiate a singleton by calling \"new\" on this function.\n\n     var thisService = this;\n\n  	var dbdomain = 'localhost';\n    //dbdomain = 'ec2-54-201-237-107.us-west-2.compute.amazonaws.com';\n\n       /**\n     * @desc \n     * @return \n     */\n    this.saveJson = function() {\n    	/*\n      console.log('input:' + this.user.input); \n\n\n      var json = thisService.simulation.deserialize();\n      json['documentName'] =  thisService.documentName.input;\n      json = JSON.stringify(json, undefined, 2);\n      this.postjson(json);\n      */\n    };\n\n    /**\n     * @desc \n     * @return \n     */\n    this.loadAccounts = function() {\n\n        var url = 'http://' + dbdomain + ':8080/';\n        $http.get(url,{\n            params: {\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Request-Headers' : 'access-control-allow-origin'\n                }\n            }\n        }).success(function(data) {\n\n          console.log('Load accounts success');\n          thisService.accountsData = data;\n\n        }).error(function(data) {\n            data = data;\n            window.alert('loadAccounts failed for ' + url);\n        });\n\n    };\n\n     /**\n     * @desc \n     * @return \n     */\n    this.selectAccount = function(index) {\n      console.log('selectAccount' + index);\n\n      thisService.data = thisService.accountsData[Object.keys(thisService.accountsData)[index]];\n\n\n     //todo: split in to state and rules: setTimeout(thisService.createSim, 200);\n\n   \n    };\n\n     /**\n     * @desc \n     * @return \n     */\n    this.removeAllAccounts = function() {\n\n        var url = 'http://' + dbdomain + ':8080/removealldocuments';\n        $http.get(url,{\n            params: {\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Access-Control-Request-Headers' : 'access-control-allow-origin'\n                }\n            }\n        }).success(function(data) {\n\n          console.log('removeAllAccounts success');\n          thisService.accountsData = data;\n          //$scope.$apply();\n\n        }).error(function(data) {\n            data = data;\n            window.alert('removeAllAccounts failed for ' + url);\n        });\n\n    };\n\n\n    /**\n     * @desc \n     * @return \n     */\n    // curl -H \"Accept: application/json\" -H \"Content-type: application/json\" -X POST -d '{\"tag\":\"noob\",\"score\":43,\"date\":\"now\"}' http://ec2-54-213-75-45.us-west-2.compute.amazonaws.com:8080/score\n    this.postjson = function(jsondata) {   \n        $http.defaults.useXDomain = true;  \n        delete $http.defaults.headers.common['X-Requested-With'];          \n        $http({\n           // url: 'http://ec2-54-201-237-107.us-west-2.compute.amazonaws.com:8080/score',\n            url: 'http://' + dbdomain + ':8080/accounts',\n            method: 'POST',\n            data: jsondata,\n            headers: {'Content-Type': 'application/json'}\n        }).success(function (data, status, headers, config) {\n            //$scope.users = data.users; \n            //$location.path('/scores'); \n            window.alert('post success:' + status);\n        }).error(function (data, status, headers, config) {\n            //$scope.status = status + ' ' + headers;\n            window.alert('post error:' + status);\n            window.alert('post error:' + headers);\n        });\n    };\n\n  });\n",
			"file": "app/scripts/services/util/backendTimers.js",
			"file_size": 3575,
			"file_write_time": 130827394000000000,
			"settings":
			{
				"buffer_size": 3580,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\n<button ng-click=\"getAccounts().loadAccounts()\">Refresh</button>\n\n<table class=\"table table-bordered table-condensed\">\n<thead>\n  <tr class=\"noselect\" >\n      <th class=\"col-sm-1\">Name</br> &nbsp</th>\n  </tr>\n</thead>\n</table>   \n\n  <div class=\"bodycontainer scrollable\">\n  <table class=\"table table-bordered table-condensed table-scrollable\">\n    <tbody>\n      <tr ng-repeat=\"(k,v)  in getAccounts().accountsData\" ng-click=\"getAccounts().selectAccount($index)\" class=\"noselect\" >\n        <td bgcolor=\"#00FF00\" class=\"col-sm-1\">{{v.documentName}}</td> \n      </tr>\n    </tbody>\n  </table>\n  </div>\n\n\n  <button ng-click=\"getAccounts().removeAllAccounts()\">Remove All Accounts</button>\n\n\n\n ",
			"file": "/Users/colinmoore/dev/crafty/app/views/pages/db.html",
			"file_size": 689,
			"file_write_time": 130827393060000000,
			"settings":
			{
				"buffer_size": 689,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "'use strict';\n\n/**\n * @ngdoc service\n * @name craftyApp.FSJSONLoader\n * @description\n * # FSJSONLoader\n * Load JSON in to sim\n */\nangular.module('craftyApp')\n  .service('FSJSONLoader', [   'FSSimRules', 'FSSimState', 'FSSimMessagingChannel', '$http', '$location', 'stopwatch', 'WorldMap', 'WorldMapEdit', function ( FSSimRules, FSSimState, FSSimMessagingChannel, $http, $location, stopwatch, WorldMap, WorldMapEdit) {\n    // AngularJS will instantiate a singleton by calling \"new\" on this function\n\n    var thisService = this;\n\n  \n    this.myStopwatch = stopwatch;\n    this.taskTimeScalarDivVis = 'hidden';\n    this.defaultDocumentName = {input: 'My Account Name'};\n    this.documentName = angular.copy(this.defaultDocumentName);\n\n\n    /**\n     * @desc \n     * @return \n     */\n    this.createSimRules = function( data, url) {\n      console.log('createSimRules');\n      this.taskTimeScalarDivVis ='';\n      FSSimRules.set(data, url);\n    };\n\n    /**\n     * @desc \n     * @return \n     */\n    this.createSimState = function(data, url) {\n      url = url;\n      console.log('createSimState');\n     \n      FSSimState.set(data);\n      FSSimMessagingChannel.updateGoals();\n      stopwatch.reset();\n      stopwatch.start();\n    };\n\n    /**\n     * @desc \n     * @return \n     */\n    this.createSimWorldMap = function(data, url) {\n      url = url;\n      console.log('createSimWorldMap');\n\n      WorldMap.set(data);\n      WorldMapEdit.set(data); // also init editor with this data.\n    };\n\n\n    this.master = {\n      'craftyrules' : {url: 'https://api.myjson.com/bins/4p92y', onLoad: this.createSimRules, data:null},\n      'craftystate' : {url: 'https://api.myjson.com/bins/1yqsa', onLoad: this.createSimState, data:null},\n      'craftymap' : {url: 'https://api.myjson.com/bins/4am2q', onLoad: this.createSimWorldMap, data:null}\n\n      //'craftyrules' : {url: 'http://localhost:9000/json/rules.json', onLoad: this.createSimRules, data:null},\n      //'craftystate' : {url: 'http://localhost:9000/json/state.json', onLoad: this.createSimState, data:null},\n      //'craftymap' : {url: 'http://localhost:9000/json/worldmap.json', onLoad: this.createSimWorldMap, data:null}\n    };\n\n    this.user = angular.copy(this.master);\n\n   /**\n     * @desc \n     * @return \n     */\n    this.loadAndCreateSim = function() {\n\n      var successRefCount = 0;\n\n      for ( var thisJSONindex in this.user) {\n\n        var thisJSON = this.user[thisJSONindex];\n\n              $http.get(thisJSON.url,{\n                  params: {\n                      dataType: 'json',\n                      headers: {\n                          'Access-Control-Allow-Origin': '*',\n                          'Access-Control-Request-Headers' : 'access-control-allow-origin'\n                      }\n                  }\n              }).success(function(json) {\n\n                thisService.user[json.title].data = json;\n    \n                successRefCount ++;\n                console.log('refcount:' + successRefCount);\n\n                if ( successRefCount === Object.keys(thisService.user).length) {\n                      for ( var loadJSONkey in thisService.user) {   \n                          if ( thisService.user[loadJSONkey].onLoad !== null) {\n                            thisService.user[loadJSONkey].onLoad( thisService.user[loadJSONkey].data, thisService.user[loadJSONkey].url);\n                          } else {\n                            window.alert('Validation failed for ' + thisService.user[loadJSONkey].url);\n                          }\n                      }\n                      $location.path('/'); \n                }\n\n              }).error(function(json) {\n                  json = json;\n                  window.alert('JSON load failed for' + thisJSON.url);\n              });\n         }\n    };\n\n\n    this.loadAndCreateSim();\n\n\n \n\n\n\n\n   \n\n\n    \n  }]);\n",
			"file": "app/scripts/services/util/fsjsonloader.js",
			"file_size": 7063,
			"file_write_time": 130826406160000000,
			"settings":
			{
				"buffer_size": 3825,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/scripts/controllers/main.js",
			"settings":
			{
				"buffer_size": 1479,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/scripts/app.js",
			"settings":
			{
				"buffer_size": 1695,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 50.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/colinmoore/Dev/crafty",
		"/Users/colinmoore/Dev/crafty/app",
		"/Users/colinmoore/Dev/crafty/app/scripts",
		"/Users/colinmoore/Dev/crafty/app/scripts/controllers",
		"/Users/colinmoore/Dev/crafty/app/scripts/services",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/map",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/util",
		"/Users/colinmoore/Dev/crafty/app/views"
	],
	"file_history":
	[
		"/Users/colinmoore/Dev/crafty/app/scripts/services/util/timers.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/fssimrules.js",
		"/Users/colinmoore/Dev/crafty/app/views/pages/rules.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/util/fsjsonloader.js",
		"/Users/colinmoore/Dev/crafty/app/json/rules.json",
		"/Users/colinmoore/Dev/crafty/app/views/share/worldmapgrid.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimtasks.js",
		"/Users/colinmoore/dev/crafty/app/views/pages/worldmap.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/craft.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/load.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/app.js",
		"/Users/colinmoore/Dev/crafty/app/index.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state/fsgatherable.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimgathering.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsuieventhandler.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimharvesting.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimcrafting.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/map/worldmap.js",
		"/Users/colinmoore/Dev/crafty/app/json/worldmap.json",
		"/Users/colinmoore/dev/crafty/app/views/share/bank.html",
		"/Users/colinmoore/dev/crafty/app/views/share/bankables.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/character.html",
		"/Users/colinmoore/dev/crafty/app/views/share/constructors.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state/fscraftable.js",
		"/Users/colinmoore/Dev/crafty/app/json/state.json",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state/fsharvestable.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state/fstask.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state/fscharacter.js",
		"/Users/colinmoore/Dev/crafty/app/views/share/mapgrid.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/map/worldmapedit.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/map/world.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/fssimstate.js",
		"/Users/colinmoore/Dev/crafty/app/views/pages/main.html",
		"/Users/colinmoore/dev/crafty/app/json/worldmap.json",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/mapedit/mapedit.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/controllers/main.js",
		"/Users/colinmoore/dev/crafty/app/views/share/charactersheetstats.html",
		"/Users/colinmoore/dev/crafty/app/views/share/worldmapgridedit.html",
		"/Users/colinmoore/Dev/crafty/app/views/pages/worldmapedit.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/rules.html",
		"/Users/colinmoore/Dev/crafty/app/views/pages/worldmap.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/map.html",
		"/Users/colinmoore/dev/crafty/app/views/main.html",
		"/Users/colinmoore/dev/crafty/app/views/share/characterselect.html",
		"/Users/colinmoore/dev/crafty/publishToEC2JSON.sh",
		"/Users/colinmoore/Dev/crafty/app/views/share/charactersheet.html",
		"/Users/colinmoore/Dev/crafty/app/views/share/bankables.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimobjectfactory.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimbank.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state/fsbankable.js",
		"/Users/colinmoore/Dev/crafty/app/views/characterselect.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/rewards.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/reference.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/db.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/main.html",
		"/Users/colinmoore/Dev/crafty/app/views/main.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimmessagingchannel.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimrewards.js",
		"/Users/colinmoore/Dev/crafty/app/views/craftables.html",
		"/Users/colinmoore/Dev/crafty/app/views/harvestables.html",
		"/Users/colinmoore/Dev/crafty/app/views/gatherables.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimbank.js",
		"/Users/colinmoore/Dev/crafty/app/views/recipes.html",
		"/Users/colinmoore/Dev/crafty/app/views/db.html",
		"/Users/colinmoore/Dev/crafty/app/views/charactersheet.html",
		"/Users/colinmoore/Dev/crafty/app/views/character.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsjsonloader.js",
		"/Users/colinmoore/dev/crafty/Gruntfile.js",
		"/Users/colinmoore/Dev/crafty/Gruntfile.js",
		"/Users/colinmoore/Dev/crafty/app/views/tasks.html",
		"/Users/colinmoore/Dev/crafty/app/views/bank.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimobjectfactory.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsbankable.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fstask.js",
		"/Users/colinmoore/dev/crafty/app/views/tasks.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimtasks.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fscharacter.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimobjectchannel.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/stopwatch.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimgathering.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimharvesting.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimcrafting.js",
		"/Users/colinmoore/Dev/crafty/app/views/charactersheetstats.html",
		"/Users/colinmoore/Dev/crafty/app/views/rewards.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimservice.js",
		"/Users/colinmoore/Dev/crafty/app/views/goals.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimrewards.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsbackpack.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimstate.js",
		"/Users/colinmoore/Dev/crafty/app/views/contextinfoconsole.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fscontextconsole.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsrecipe.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimfactory.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsharvestable.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsgatherable.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsreward.js",
		"/Users/colinmoore/Dev/crafty/app/views/reference.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimrules.js",
		"/Users/colinmoore/dev/crafty/app/views/rewards.html",
		"/Users/colinmoore/dev/crafty/app/views/goals.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimdatajson.js",
		"/Users/colinmoore/Dev/crafty/app/styles/main.css",
		"/Users/colinmoore/dev/crafty/bower_components/bootstrap/dist/css/bootstrap.css",
		"/Users/colinmoore/Perforce/cmoore_MBP/crafty/state.json",
		"/Users/colinmoore/Perforce/cmoore_MBP/crafty/rules.json",
		"/Users/colinmoore/Dev/crafty/dist/index.html",
		"/Users/colinmoore/dev/crafty/bower.json",
		"/Users/colinmoore/dev/crafty/bower_components/bootstrap/bower.json",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsservice.js",
		"/Users/colinmoore/Library/Application Support/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/Users/colinmoore/dev/crafty/app/views/contextinfoconsole.html",
		"/Users/colinmoore/dev/crafty/app/json/state.json",
		"/Users/colinmoore/Dev/crafty/app/crafty.json",
		"/Users/colinmoore/dev/crafty/app/json/defintions.json",
		"/Users/colinmoore/dev/crafty/app/json/crafty.json",
		"/Users/colinmoore/dev/crafty/app/json/defines.json",
		"/Users/colinmoore/Downloads/sourcetree.license",
		"/Users/colinmoore/dev/Electoral-System-Simulator/app/index.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/controllers/about.js",
		"/Users/colinmoore/dev/crafty/app/json/rules.json",
		"/Users/colinmoore/dev/craftydb/craftydb.js",
		"/Users/colinmoore/Perforce/cmoore_MBP/crafty/smallerdataset.json",
		"/Users/colinmoore/dev/crafty/app/views/db.html",
		"/Users/colinmoore/dev/craftydb/craftydbapp.js",
		"/Users/colinmoore/Dev/crafty/db/craftydb.js",
		"/Users/colinmoore/dev/Electoral-System-Simulator/app/scripts/services/electionservice.js",
		"/Users/colinmoore/dev/craftydb/publishToEC2.sh",
		"/Users/colinmoore/Dev/crafty/logs/[ec2-user@ip-172-31-38-189 html]$ npm list -g"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"/Users/colinmoore/Dev/crafty/app",
			"/Users/colinmoore/Dev/crafty/bower_components",
			"/Users/colinmoore/Dev/crafty/app",
			"/Users/colinmoore/Dev/crafty/app/views",
			"/Users/colinmoore/Dev/crafty/app/scripts",
			"/Users/colinmoore/Dev/crafty"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"toJson",
			"url",
			"min-w",
			"gem",
			"FSContextConsole",
			"FSTask",
			"isCraftable",
			"isHarvestable",
			"isGatherable",
			"lumber",
			"rule",
			"duration",
			"getTaskDuration",
			"cell",
			"harvestable",
			"cell.",
			"harve",
			"canPerformTask",
			"rgba",
			"canPerformTask",
			"' ",
			"createSimWorldMap",
			"<pre>\n{{getFSJSONLoader().simulation.jsonSerialized}}\n</pre>",
			"harvestableDefines",
			"*/\n",
			"harvestableDefinesKeys",
			"MeatS",
			"Grilled",
			"httpProvider",
			"validateJSON",
			"Steel",
			"Sheep",
			"Fish\"",
			"Fish",
			"food",
			"foodDefines",
			"WoodAxe",
			"Grill",
			"Meal",
			"BasicMeal",
			"    \"BasicMeal\",\nBasicMeal",
			"BasicMeal",
			"wool",
			"Wool",
			"BackPack",
			"Rope",
			"forEa",
			"toolDefines",
			"indexOf",
			"bank",
			"bankWith",
			"bankwith",
			"bankDeposit",
			"characterObjs",
			"hasUnlocks",
			"FSService",
			"FSSimObjectChannel",
			"stopActiveTask",
			"queuedTaskCount",
			"OPTIONAL_PROPERTY_PROFICIENECY",
			"        \n",
			"startNextTask",
			"hasCraftingProficiencyFor",
			"profic",
			"profiv",
			"hasCraftingProficiencyFor",
			"hasCraftingIngredients",
			"canPerformTask",
			"hasCraftingIngredients",
			"log",
			"isCraftable",
			"canPerformTask",
			"getValidCharacters",
			"logDependencies",
			"serve",
			"watch",
			"hint",
			"'harvestables'",
			"'gatherables'",
			"FSRecipe",
			"onUpdateGoalsHandler",
			"FSBackpack",
			"+ harvesting",
			"harvesting +",
			"call",
			".call",
			"eval.call",
			"apply",
			"addTaskCatgeory",
			"updateActiveTaskTotalSeconds",
			"activity",
			"startNextTask",
			"startNext",
			"FSSimObjectChannel.completedTask",
			"stopAc",
			"startNextTask",
			"pendingTasks",
			"addTask",
			"FSSimCrafting",
			"FSBack",
			"onClickGatherables",
			"selectC",
			"this.Se",
			"selectCharacter",
			"FStask",
			"scope",
			"FSSimFactory",
			"createSimRules",
			"thisFactory",
			"getTaskDuration",
			"isGatherable",
			"isHarvestable",
			"thisFactory",
			"isGath",
			"hasCraftingConstructor",
			"FSSimCrafting",
			"hasCraftingIngredients",
			"isCra",
			"bgcol",
			"onClickCharacter",
			"selectedCharacter",
			"onClickCharacterWeapon",
			"onClickBa",
			"onClickC",
			"onClic",
			"unlo",
			"FSSimRewards",
			"hasU"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"consumableDefines",
			"characters",
			"FSJSONLoader",
			"FSSimMessagingChannel",
			"FSCraftable",
			"FSBankable",
			"duration",
			"craftables",
			"craftableDefines",
			"FSBackpack",
			"FSSimFactory",
			"recipeDef",
			"FSRecipeDef"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app/scripts/services/accounts.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3577,
						"regions":
						{
						},
						"selection":
						[
							[
								2127,
								2127
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 876.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app/scripts/services/util/backendTimers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3580,
						"regions":
						{
						},
						"selection":
						[
							[
								168,
								181
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/colinmoore/dev/crafty/app/views/pages/db.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 689,
						"regions":
						{
						},
						"selection":
						[
							[
								632,
								632
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "app/scripts/services/util/fsjsonloader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3825,
						"regions":
						{
						},
						"selection":
						[
							[
								502,
								527
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app/scripts/controllers/main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1479,
						"regions":
						{
						},
						"selection":
						[
							[
								1454,
								1462
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 678.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "app/scripts/app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1695,
						"regions":
						{
						},
						"selection":
						[
							[
								1246,
								1246
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 468.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "crafty.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 300.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
