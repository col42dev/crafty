{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"l",
				"length"
			],
			[
				"L",
				"length"
			],
			[
				"c",
				"construction"
			],
			[
				"WoodenBea",
				"WoodenBeam1"
			],
			[
				"con",
				"console"
			],
			[
				"cell",
				"cellIndex"
			],
			[
				"Crea",
				"createTimer"
			],
			[
				"h",
				"harvestables"
			],
			[
				"ca",
				"category"
			],
			[
				"get",
				"getTaskPercentRemaining"
			],
			[
				"gatherb",
				"gatherableDefines"
			],
			[
				"in",
				"indexOf"
			],
			[
				"harves",
				"harvestableDefines"
			],
			[
				"pr",
				"proficiency"
			],
			[
				"has",
				"hasOwnProperty"
			],
			[
				"up",
				"updateRecipes"
			],
			[
				"this",
				"thisActionable"
			],
			[
				"u",
				"updateGatherables"
			],
			[
				"a",
				"activity"
			],
			[
				"cons",
				"console"
			],
			[
				"ga",
				"gatherables"
			],
			[
				"for",
				"forEach"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "'use strict';\n\n/**\n * @ngdoc service\n * @name craftyApp.gdocs\n * @description\n * # gdocs\n * Service in the craftyApp.\n */\nangular.module('craftyApp')\n  .service('GDocs', ['$http', 'FSSimRules',  function ($http, FSSimRules) {\n    // AngularJS will instantiate a singleton by calling \"new\" on this function\n\n\n\n\n\n\n   this.recipes = {};\n\n  //  this.spreadsheet = '1GMFHfYlPbazTaV0u_MA6YY9gdMXJ04fmzOYQJxTtHXs';\n/*\n\n  this.spreadsheet = '1xP0aCx9S4wG_3XN9au5VezJ6xVTnZWNlOLX8l6B69n4';\n\nhttps://spreadsheets.google.com/feeds/worksheets/1xP0aCx9S4wG_3XN9au5VezJ6xVTnZWNlOLX8l6B69n4/private/full\n\nod3otrm\nomu0e9t\norndd4q\n14iw6g\noef8ni3\nov2goyk\nortobxn\noypka71 - mapstate\notw4nb - simvalues\nomsznkc - character level stats\n   \n\n   'https://spreadsheets.google.com/feeds/list/1xP0aCx9S4wG_3XN9au5VezJ6xVTnZWNlOLX8l6B69n4/od3otrm/public/values?alt=json';\n*/\n\n  this.spreadsheet = '1xP0aCx9S4wG_3XN9au5VezJ6xVTnZWNlOLX8l6B69n4';\n\n \n   this.update = function() {\n\n   	console.log('GDocs: update');\n\n   	  var spreadsheet = this.spreadsheet;\n\n\n   	  var url = 'https://spreadsheets.google.com/feeds/list/'+spreadsheet+'/od3otrm/public/values?alt=json';\n\n          $http.get(url,{\n              params: {\n                  dataType: 'json',\n                  headers: {\n                      'Access-Control-Allow-Origin': '*',\n                      'Access-Control-Request-Headers' : 'access-control-allow-origin'\n                  }\n              }\n          }).success(function(json) {\n\n          	this.response = json;\n\n          	console.log( 'length:' + this.response.feed.entry.length);\n\n          	var entry0 = this.response.feed.entry[0];\n\n            for (var i = 0; i < this.response.feed.entry.length; i++) { \n\n              var content = this.response.feed.entry[i].content;\n              console.log( angular.toJson(content));\n\n              var workstation = this.response.feed.entry[i].gsx$recipeworkstationid.$t;\n\n              if (workstation.length > 0 && workstation !== 'Null') {\n\n                var recipe = {};\n\n                var workstationLevel = this.response.feed.entry[i].gsx$recipeworkstationlevel.$t;\n\n\n                recipe.construction = [];\n                recipe.construction.push(workstation+workstationLevel);\n\n\n                recipe.actionPoints = parseInt( this.response.feed.entry[i].gsx$inputactionpointsamount.$t, 10);\n\n                recipe.input = {};\n                for ( var resourceInputIndex = 1; resourceInputIndex <= 3; resourceInputIndex ++) {\n                	var propnameInputID = 'gsx$inputresource' + resourceInputIndex + 'id';\n                	var propnameInputAmount = 'gsx$inputresource' + resourceInputIndex + 'amount';\n                	var resourceInputId = this.response.feed.entry[i][propnameInputID].$t;\n                	if ( resourceInputId.length > 0) {\n                		var resourceAmount = parseInt( this.response.feed.entry[i][propnameInputAmount].$t, 10);\n                		recipe.input[resourceInputId] = resourceAmount;\n                	}\n                }\n\n                recipe.output = {};\n                for ( var resourceOutputIndex = 1; resourceOutputIndex <= 1; resourceOutputIndex ++) {\n                	var propnameOutputID = 'gsx$outputresource' + resourceOutputIndex + 'id';\n                	var propnameOutputAmount = 'gsx$outputresource' + resourceOutputIndex + 'amount';\n                	var propnameOutputLevel = 'gsx$outputresource' + resourceOutputIndex + 'level';\n                	var resourceOutputId = this.response.feed.entry[i][propnameOutputID].$t;\n                	if ( resourceOutputId.length > 0) {\n                		var resourceOutputAmount = parseInt( this.response.feed.entry[i][propnameOutputAmount].$t, 10);\n                		var resourceOutputLevel = this.response.feed.entry[i][propnameOutputLevel].$t;\n                		if (resourceOutputLevel.length > 0) {\n                			resourceOutputLevel = parseInt( resourceOutputLevel, 10);\n                      if (resourceOutputLevel == 0) \n                      {\n                        resourceOutputLevel = '';\n                      }\n                		} else {\n                			resourceOutputLevel = '';\n                		}\n                		recipe.output[resourceOutputId+resourceOutputLevel] = resourceOutputAmount;\n                	}\n                }\n\n                recipe.duration = parseInt( this.response.feed.entry[i].gsx$inputtimeamount.$t, 10);\n                if ( recipe.duration === 0) {\n                	recipe.duration = 1;\n                }\n\n               \n                recipe.recipename = this.response.feed.entry[i].gsx$recipename.$t;\n\n                recipe.desc = this.response.feed.entry[i].gsx$recipedescription.$t;\n\n                recipe.category = this.response.feed.entry[i].gsx$recipecategory.$t;\n\n\n                //console.log( JSON.stringify( recipe, null, 2));\n\n\n                var recipeid = this.response.feed.entry[i].gsx$recipeid.$t;\n\n\n\n\n                this.recipes[recipeid] = recipe;\n\n                recipe.playerlevelneeded = parseInt( this.response.feed.entry[i].gsx$playerlevelneeded.$t, 10);\n\n                recipe.simMotives= [];\n                for ( var motivesIndex = 1; motivesIndex <= 5; motivesIndex ++) {\n\n                      var recipesimulationmotive = 'gsx$recipesimulationmotive' + motivesIndex + 'id';\n                      var id = this.response.feed.entry[i][recipesimulationmotive].$t;\n\n                      if (id.length > 0) {\n                        recipe.simMotives.push(id);\n                      }\n                }\n\n\n                if (this.response.feed.entry[i].gsx$recipesimulationmaxworkers.$t.length > 0) {\n                  recipe.maxWorkers = parseInt( this.response.feed.entry[i].gsx$recipesimulationmaxworkers.$t, 10);\n                } \n\n      \n                recipe.xp = parseInt( this.response.feed.entry[i].gsx$recipeplayerxpadded.$t, 10); \n     \n                recipe.automate = this.response.feed.entry[i].gsx$outputautomaticrenew.$t;\n\n\n                if (this.response.feed.entry[i].gsx$objectslotcategory.$t.length > 0) {\n                  recipe.objectSlotCategory = this.response.feed.entry[i].gsx$objectslotcategory.$t;\n                }\n\n                if (this.response.feed.entry[i].gsx$motiveslotcapacity.$t.length > 0) {\n                  recipe.motiveSlotCapacity = parseInt( this.response.feed.entry[i].gsx$motiveslotcapacity.$t, 10);\n                }\n\n                if (this.response.feed.entry[i].gsx$workstationslotcapacity.$t.length > 0) {\n                  recipe.workstationSlotCapacity = parseInt(this.response.feed.entry[i].gsx$workstationslotcapacity.$t, 10);\n                }\n\n                if (this.response.feed.entry[i].gsx$defenseslotcapacity.$t.length > 0) {\n                  recipe.defenseSlotCapacity = parseInt(this.response.feed.entry[i].gsx$defenseslotcapacity.$t, 10);\n                }\n\n                // local/global storage\n\n\n                recipe.localStorage = parseInt(this.response.feed.entry[i].gsx$recipelocalstorage.$t, 10);\n\n\n                recipe.globalStorage = parseInt(this.response.feed.entry[i].gsx$recipeglobalstorage.$t, 10);\n\n\n     \n\n              }\n\n\n			       }\n          	\n          	 console.log('spreadsheet found.');\n\n          	 FSSimRules.craftableDefines = angular.copy(this.recipes);\n\n             FSSimRules.rebuildMirrors();\n\n             window.alert('Updated. Now update server to persist this change.');\n\n          }.bind(this)).error(function() {\n\n          	console.log('spreadsheet not found.');\n\n          });\n\n\n          // progression\n          console.log('progression');\n\n          url = 'https://spreadsheets.google.com/feeds/list/'+spreadsheet+'/ov2goyk/public/values?alt=json';\n\n          $http.get(url,{\n              params: {\n                  dataType: 'json',\n                  headers: {\n                      'Access-Control-Allow-Origin': '*',\n                      'Access-Control-Request-Headers' : 'access-control-allow-origin'\n                  }\n              }\n          }).success(function(json) {\n\n            this.response = json;\n\n            console.log( 'length:' + this.response.feed.entry.length);\n\n            var entry0 = this.response.feed.entry[0];\n\n            var progressions = {};\n\n\n            for (var i = 0; i < this.response.feed.entry.length; i++) { \n\n              var progression = {};\n\n              var content = this.response.feed.entry[i].content;\n              //console.log( angular.toJson(content));\n\n              var playerlevel = this.response.feed.entry[i].gsx$playerlevel.$t;\n              console.log( playerlevel);\n\n              if (playerlevel.length > 0 ) {\n                progression.playerLevel = parseInt( this.response.feed.entry[i].gsx$playerlevel.$t, 10);\n                //console.log( playerxpneeded);\n\n                progression.playerXPNeeded = parseInt( this.response.feed.entry[i].gsx$playerxpneeded.$t, 10);\n\n                progression.recipes = {};\n                for ( var recipeIndex = 1; recipeIndex <= 5; recipeIndex ++) {\n        \n\n                  var propnameRecipeID = 'gsx$recipe' + recipeIndex + 'id';\n                  var propnameRecipeAmount = 'gsx$recipe' + recipeIndex + 'amount';\n                  var propnameRecipeXP = 'gsx$recipe' + recipeIndex + 'xp';\n\n                  var propvalueRecipeID = this.response.feed.entry[i][propnameRecipeID].$t;\n\n                  if ( propvalueRecipeID.length > 0) {\n\n                    if (this.response.feed.entry[i][propnameRecipeID].$t !== 'NULL') {\n                      var recipeID = this.response.feed.entry[i][propnameRecipeID].$t;\n                      var recipe = {};\n                      \n                      recipe.amount = parseInt( this.response.feed.entry[i][propnameRecipeAmount].$t, 10);\n                      recipe.xp = parseInt( this.response.feed.entry[i][propnameRecipeXP].$t, 10);\n\n                      progression.recipes[ recipeID] = recipe;\n                    }\n                  }\n                }\n\n                progression.maxWorkers = parseInt( this.response.feed.entry[i].gsx$maxworkers.$t, 10);\n                progression.additionalMaxWorkersxp = parseInt( this.response.feed.entry[i].gsx$additionalmaxworkersxp.$t, 10);\n                progression.maxHeroes = parseInt( this.response.feed.entry[i].gsx$maxheroes.$t, 10);\n                progression.maxHeroesUnlocked = parseInt( this.response.feed.entry[i].gsx$maxheroesunlocked.$t, 10);\n                progression.maxDefenseTraps = parseInt( this.response.feed.entry[i].gsx$maxdefensetraps.$t, 10);\n                progression.maxDefenseTowers = parseInt( this.response.feed.entry[i].gsx$maxdefensetowers.$t, 10);\n                progression.maxCombatWaves = parseInt( this.response.feed.entry[i].gsx$maxcombatwaves.$t, 10);\n                progression.enforceHunger = (this.response.feed.entry[i].gsx$enforcehunger.$t === 'TRUE') ? 1 : 0;\n                progression.enforceRest = (this.response.feed.entry[i].gsx$enforcerest.$t === 'TRUE') ? 1 : 0;\n\n              }\n\n              progressions[playerlevel] = progression;\n\n              console.log( angular.toJson(progression));\n\n            }\n\n            FSSimRules.progressionDefines = angular.copy(progressions);\n            FSSimRules.rebuildMirrors();\n\n\n\n          }.bind(this)).error(function() {\n\n            console.log('progression spreadsheet not found.');\n\n          });\n\n	};\n\n\n	//this.getSummary();\n\n\n\n  }]);\n",
			"file": "app/scripts/services/gdocs.js",
			"file_size": 11408,
			"file_write_time": 130905133320000000,
			"settings":
			{
				"buffer_size": 11440,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/pages/rules.html",
			"settings":
			{
				"buffer_size": 12827,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/scripts/controllers/main.js",
			"settings":
			{
				"buffer_size": 2299,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/colinmoore/dev/crafty/app/scripts/services/json/fsmapstate.js",
			"settings":
			{
				"buffer_size": 3678,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/scripts/services/json/fssimvalues.js",
			"settings":
			{
				"buffer_size": 3608,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/scripts/services/json/fssimworkers.js",
			"settings":
			{
				"buffer_size": 4986,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/json/rules.json",
			"settings":
			{
				"buffer_size": 127686,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/json/mapstate.json",
			"settings":
			{
				"buffer_size": 74497,
				"line_ending": "Unix",
				"name": "{"
			}
		},
		{
			"contents": "'use strict';\n\n/**\n * @ngdoc service\n * @name craftyApp.FSJSONLoader\n * @description\n * # FSJSONLoader\n * Load JSON in to sim\n */\nangular.module('craftyApp')\n  .service('FSJSONLoader', \n    [   \n      'FSSimRules', \n      'FSSimState', \n      'FSMapState', \n      'FSSimValues', \n      'FSSimWorkers',\n      'FSSimMessagingChannel', \n      '$http', \n      '$location', \n      'stopwatch', \n      'WorldMap', \n      'WorldMapEdit', \n    function ( \n      FSSimRules, \n      FSSimState, \n      FSMapState, \n      FSSimValues, \n      FSSimWorkers, \n      FSSimMessagingChannel, \n      $http, \n      $location, \n      stopwatch, \n      WorldMap, \n      WorldMapEdit) \n    {\n\n    // AngularJS will instantiate a singleton by calling \"new\" on this function\n\n    var thisService = this;\n\n  \n    this.myStopwatch = stopwatch;\n    this.taskTimeScalarDivVis = 'hidden';\n    this.defaultDocumentName = {input: 'My Account Name'};\n    this.documentName = angular.copy(this.defaultDocumentName);\n\n\n    /**\n     * @desc \n     * @return \n     */\n    this.createSimRules = function( data, url) {\n      console.log('createSimRules');\n      this.taskTimeScalarDivVis ='';\n      FSSimRules.set(data, url);\n    };\n\n    /**\n     * @desc \n     * @return \n     */\n    this.createSimState = function(data, url) {\n      console.log('createSimState');\n     \n      FSSimState.set(data, url);\n      FSSimMessagingChannel.updateGoals();\n      stopwatch.reset();\n      stopwatch.start();\n    };\n\n    /**\n     * @desc \n     * @return \n     */\n    this.createSimWorldMap = function(data, url) {\n      console.log('createSimWorldMap');\n\n      WorldMap.set(data);\n      WorldMapEdit.set(data, url); // also init editor with this data.\n    };\n\n\n    /**\n     * @desc \n     * @return \n     */\n    this.createMapState = function(data, url) {\n      console.log('createSimMapState');\n\n      FSMapState.set(data, url); \n    };\n\n        /**\n     * @desc \n     * @return \n     */\n    this.createSimValues = function(data, url) {\n      console.log('createSimValues');\n\n      FSSimValues.set(data, url); \n    };\n\n            /**\n     * @desc \n     * @return \n     */\n    this.createSimWorkers = function(data, url) {\n      console.log('createSimWorkers');\n\n      FSSimWorkers.set(data, url); \n    };\n\n    this.master = {\n      'craftyrules' : {url: 'https://api.myjson.com/bins/3ji5e', onLoad: this.createSimRules, data:null},\n      'craftystate' : {url: 'https://api.myjson.com/bins/1a9rm', onLoad: this.createSimState, data:null},\n      'craftymap' : {url: 'https://api.myjson.com/bins/1yomi', onLoad: this.createSimWorldMap, data:null},\n      'mapstate' : {url: 'https://api.myjson.com/bins/42y9a', onLoad: this.createMapState, data:null},\n      'simvalues' : {url: 'https://api.myjson.consolem/bins/4rrxs', onLoad: this.createSimValues, data:null},\n      'simworkers' : {url: 'https://api.myjson.com/bins/4xb60', onLoad: this.createSimWorkers, data:null},\n\n\n     // 'craftyrules' : {url: 'http://localhost:9000/json/rules.json', onLoad: this.createSimRules, data:null},\n     // 'craftystate' : {url: 'http://localhost:9000/json/state.json', onLoad: this.createSimState, data:null},\n     // 'craftymap' : {url: 'http://localhost:9000/json/worldmap.json', onLoad: this.createSimWorldMap, data:null}\n    };\n\n    this.user = angular.copy(this.master);\n\n   /**\n     * @desc \n     * @return \n     */\n    this.loadAndCreateSim = function() {\n\n      var successRefCount = 0;\n\n      for ( var thisJSONindex in this.user) {\n\n        var thisJSON = this.user[thisJSONindex];\n\n              $http.get(thisJSON.url,{\n                  params: {\n                      dataType: 'json',\n                      headers: {\n                          'Access-Control-Allow-Origin': '*',\n                          'Access-Control-Request-Headers' : 'access-control-allow-origin'\n                      }\n                  }\n              }).success(function(json) {\n\n                thisService.user[json.title].data = json;\n    \n                successRefCount ++;\n                console.log('refcount:' + successRefCount);\n\n                if ( successRefCount === Object.keys(thisService.user).length) {\n                      for ( var loadJSONkey in thisService.user) {   \n                          if ( thisService.user[loadJSONkey].onLoad !== null) {\n                            thisService.user[loadJSONkey].onLoad( thisService.user[loadJSONkey].data, thisService.user[loadJSONkey].url);\n                          } else {\n                            window.alert('Validation failed for ' + thisService.user[loadJSONkey].url);\n                          }\n                      }\n                      $location.path('/'); \n                }\n\n              }).error(function(json) {\n                  json = json;\n                  window.alert('JSON load failed for' + thisJSON.url);\n              });\n         }\n    };\n\n\n    this.loadAndCreateSim();\n\n\n \n\n\n\n\n   \n\n\n    \n  }]);\n",
			"file": "app/scripts/services/util/fsjsonloader.js",
			"file_size": 4916,
			"file_write_time": 130899108510000000,
			"settings":
			{
				"buffer_size": 4922,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/scripts/services/json/fssimrules.js",
			"settings":
			{
				"buffer_size": 6720,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 80 files for \"IndexOf\"\n\n/Users/colinmoore/Dev/crafty/app/scripts/services/fsuieventhandler.js:\n   47              switch( action) {\n   48                   case 'reward':\n   49:                     enabled = (FSSimState.rewards.indexOf(type) === -1) ? false : true ;\n   50                      break;\n   51                  case 'craft':\n   ..\n  144          this.onClickWorld = function ( category, row, col) {\n  145  \n  146:             var cellIndex = WorldMap.getIndexOf(row, col);\n  147  \n  148              var existingTask = FSSimTasks.getTaskAtWorldLocation( cellIndex);\n\n/Users/colinmoore/Dev/crafty/app/scripts/services/json/fssimworkers.js:\n   86                if (raceprofession === 'Race') {\n   87                  var race = this.response.feed.entry[rowIndex]['gsx$workerraceprofession'].$t\n   88:                 if ( races.IndexOf(race)\n   89  \n   90                } else if (raceprofession === 'Profession') {\n\n/Users/colinmoore/Dev/crafty/app/scripts/services/map/worldmap.js:\n   47     * @return \n   48     */\n   49:   this.getIndexOf = function(row, col) {\n   50:     var rowIndex = this.json.worldMap.indexOf(row);\n   51:     var colIndex = row.indexOf(col);\n   52      //console.log(rowIndex + ', ' + colIndex);\n   53      return { 'row' : rowIndex, 'col' : colIndex };\n\n/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimrewards.js:\n   24              for (var thisRewardRule in FSSimRules.rewardRules) {\n   25                  if (FSSimRules.rewardRules.hasOwnProperty(thisRewardRule)) {        \n   26:                     if ( FSSimState.rewards.indexOf(thisRewardRule) === -1) {\n   27                          console.log('GOAL:' + thisRewardRule);\n   28  \n   ..\n   53                              \n   54                              // reward reward\n   55:                             if ( FSSimState.rewards.indexOf(thisRewardRule) === -1) {\n   56                                  console.log('REWARD:' + thisRewardRule);\n   57                                  FSSimState.rewards.push(thisRewardRule);\n   ..\n   97                      if (FSSimRules.rewardRules[thisRewardRule].action === checkDesc.action) {\n   98                          if (FSSimRules.rewardRules[thisRewardRule].target === checkDesc.target) {\n   99:                             if ( FSSimState.rewards.indexOf(thisRewardRule) === -1) {\n  100                                  return 'images/unlock.69ea04fd.png'; \n  101                              }\n\n/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimtasks.js:\n  126  \n  127          // remove task from active list\n  128:         var activeTaskIndex = FSSimState.activeTasks.indexOf( task);\n  129          if ( activeTaskIndex !== -1) {\n  130              FSSimState.activeTasks.splice( activeTaskIndex, 1);\n  ...\n  143      this.getTaskPercentRemaining = function(catgeory, row, col) {\n  144  \n  145:         var taskCellIndex = WorldMap.getIndexOf(row, col);\n  146          if ( taskCellIndex !== null ) {\n  147  \n\n/Users/colinmoore/Dev/crafty/app/scripts/services/util/serverSideTimers.js:\n  126          }).success(function() {\n  127              clearInterval(timer.clientIntervalId);\n  128:             var index = this.timers.indexOf(timer);\n  129              if (index !== -1) {\n  130                  this.timers.splice(index, 1);\n  ...\n  156                  if ( thisTimer.remaining <= 0) {\n  157                      clearInterval(thisTimer.clientIntervalId);\n  158:                     var index = thisService.timers.indexOf(thisTimer);\n  159                      if (index !== -1) {\n  160                          thisService.timers.splice(index, 1);\n\n13 matches across 6 files\n\n\nSearching 80 files for \"IndexOf\"\n\n/Users/colinmoore/Dev/crafty/app/scripts/services/fsuieventhandler.js:\n   47              switch( action) {\n   48                   case 'reward':\n   49:                     enabled = (FSSimState.rewards.indexOf(type) === -1) ? false : true ;\n   50                      break;\n   51                  case 'craft':\n   ..\n  144          this.onClickWorld = function ( category, row, col) {\n  145  \n  146:             var cellIndex = WorldMap.getIndexOf(row, col);\n  147  \n  148              var existingTask = FSSimTasks.getTaskAtWorldLocation( cellIndex);\n\n/Users/colinmoore/Dev/crafty/app/scripts/services/json/fssimworkers.js:\n   86                if (raceprofession === 'Race') {\n   87                  var race = this.response.feed.entry[rowIndex]['gsx$workerraceprofession'].$t;\n   88:                 if ( races.IndexOf(race)  === -1) {\n   89                    races[race] = {};\n   90                  }\n   ..\n   92                } else if (raceprofession === 'Profession') {\n   93                  var profession = this.response.feed.entry[rowIndex]['gsx$workerraceprofession'].$t;\n   94:                 if ( professions.IndexOf(professions)  === -1) {\n   95                    professions[professions] = {};\n   96                  }\n\n/Users/colinmoore/Dev/crafty/app/scripts/services/map/worldmap.js:\n   47     * @return \n   48     */\n   49:   this.getIndexOf = function(row, col) {\n   50:     var rowIndex = this.json.worldMap.indexOf(row);\n   51:     var colIndex = row.indexOf(col);\n   52      //console.log(rowIndex + ', ' + colIndex);\n   53      return { 'row' : rowIndex, 'col' : colIndex };\n\n/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimrewards.js:\n   24              for (var thisRewardRule in FSSimRules.rewardRules) {\n   25                  if (FSSimRules.rewardRules.hasOwnProperty(thisRewardRule)) {        \n   26:                     if ( FSSimState.rewards.indexOf(thisRewardRule) === -1) {\n   27                          console.log('GOAL:' + thisRewardRule);\n   28  \n   ..\n   53                              \n   54                              // reward reward\n   55:                             if ( FSSimState.rewards.indexOf(thisRewardRule) === -1) {\n   56                                  console.log('REWARD:' + thisRewardRule);\n   57                                  FSSimState.rewards.push(thisRewardRule);\n   ..\n   97                      if (FSSimRules.rewardRules[thisRewardRule].action === checkDesc.action) {\n   98                          if (FSSimRules.rewardRules[thisRewardRule].target === checkDesc.target) {\n   99:                             if ( FSSimState.rewards.indexOf(thisRewardRule) === -1) {\n  100                                  return 'images/unlock.69ea04fd.png'; \n  101                              }\n\n/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimtasks.js:\n  126  \n  127          // remove task from active list\n  128:         var activeTaskIndex = FSSimState.activeTasks.indexOf( task);\n  129          if ( activeTaskIndex !== -1) {\n  130              FSSimState.activeTasks.splice( activeTaskIndex, 1);\n  ...\n  143      this.getTaskPercentRemaining = function(catgeory, row, col) {\n  144  \n  145:         var taskCellIndex = WorldMap.getIndexOf(row, col);\n  146          if ( taskCellIndex !== null ) {\n  147  \n\n/Users/colinmoore/Dev/crafty/app/scripts/services/util/serverSideTimers.js:\n  126          }).success(function() {\n  127              clearInterval(timer.clientIntervalId);\n  128:             var index = this.timers.indexOf(timer);\n  129              if (index !== -1) {\n  130                  this.timers.splice(index, 1);\n  ...\n  156                  if ( thisTimer.remaining <= 0) {\n  157                      clearInterval(thisTimer.clientIntervalId);\n  158:                     var index = thisService.timers.indexOf(thisTimer);\n  159                      if (index !== -1) {\n  160                          thisService.timers.splice(index, 1);\n\n14 matches across 6 files\n",
			"settings":
			{
				"buffer_size": 7684,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "app/scripts/services/map/worldmap.js",
			"settings":
			{
				"buffer_size": 2929,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/index.html",
			"settings":
			{
				"buffer_size": 6469,
				"line_ending": "Unix"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 1113,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/pages/simworkers.html",
			"settings":
			{
				"buffer_size": 654,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/views/pages/simvalues.html",
			"settings":
			{
				"buffer_size": 645,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 127.0,
		"last_filter": "markdown pre",
		"selected_items":
		[
			[
				"markdown pre",
				"Markdown Preview: Preview in Browser"
			]
		],
		"width": 575.0
	},
	"console":
	{
		"height": 50.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/colinmoore/Dev/crafty",
		"/Users/colinmoore/Dev/crafty/app",
		"/Users/colinmoore/Dev/crafty/app/images",
		"/Users/colinmoore/Dev/crafty/app/json",
		"/Users/colinmoore/Dev/crafty/app/scripts",
		"/Users/colinmoore/Dev/crafty/app/scripts/controllers",
		"/Users/colinmoore/Dev/crafty/app/scripts/services",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/map",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/ui",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/util",
		"/Users/colinmoore/Dev/crafty/app/styles",
		"/Users/colinmoore/Dev/crafty/app/views",
		"/Users/colinmoore/Dev/crafty/app/views/pages",
		"/Users/colinmoore/Dev/crafty/app/views/share"
	],
	"file_history":
	[
		"/Users/colinmoore/Dev/crafty/app/scripts/app.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/fssimstate.js",
		"/Users/colinmoore/Dev/crafty/app/json/simvalues.json",
		"/Users/colinmoore/Dev/crafty/app/json/state.json",
		"/Users/colinmoore/Dev/crafty/app/json/worldmap.json",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/fssimrules.js",
		"/Users/colinmoore/dev/crafty/app/views/pages/mapstate.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/util/fsjsonloader.js",
		"/Users/colinmoore/Dev/crafty/app/views/pages/load.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/controllers/main.js",
		"/Users/colinmoore/Dev/crafty/app/index.html",
		"/Users/colinmoore/Perforce/cmoore_MBP/SliceOfMine/Assets/Prefabs/RoomPlacer.prefab",
		"/Users/colinmoore/Dev/crafty/app/views/pages/rules.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/map.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimtasks.js",
		"/Users/colinmoore/Perforce/cmoore_MBP/SliceOfMine/Assets/StreamingAssets/crafting.html",
		"/Users/colinmoore/Dev/crafty/app/views/share/activetasks.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state/fsbankable.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state/fstask.js",
		"/Users/colinmoore/Dev/crafty/app/views/share/craftables.html",
		"/Users/colinmoore/Dev/crafty/app/views/share/tasks.html",
		"/Users/colinmoore/Dev/crafty/app/views/pages/gdoc.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/gdocs.js",
		"/Users/colinmoore/Dev/crafty/app/views/share/goals.html",
		"/Users/colinmoore/Perforce/cmoore_MBP/SliceOfMine/Assets/StreamingAssets/index.html",
		"/Users/colinmoore/Perforce/cmoore_MBP/SliceOfMine/Assets/Scripts/Crafting/SimTimer.cs",
		"/Users/colinmoore/Perforce/cmoore_MBP/SliceOfMine/Assets/StreamingAssets/craftingcontroller.js",
		"/Users/colinmoore/Perforce/cmoore_MBP/SliceOfMine/Assets/StreamingAssets/crafting.js",
		"/Users/colinmoore/Perforce/cmoore_MBP/SliceOfMine/Assets/StreamingAssets/{",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimbank.js",
		"/Users/colinmoore/Desktop/restart",
		"/Users/colinmoore/Desktop/norestart",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/map/worldmapedit.js",
		"/Users/colinmoore/Dev/crafty/app/views/share/constructors.html",
		"/Users/colinmoore/Dev/crafty/app/views/pages/craft.html",
		"/Users/colinmoore/Dev/crafty/app/styles/main.css",
		"/Users/colinmoore/dev/col42dev.github.io/_posts/2015-7-14-Linux MongoDB EC2 install.md",
		"/Users/colinmoore/dev/col42dev.github.io/_posts/2015-7-13-Linux mEaN stack install.md",
		"/Users/colinmoore/dev/col42dev.github.io/_posts/2015-8-8-markdown preview using SublimeText.md",
		"/Users/colinmoore/dev/col42dev.github.io/_posts/2015-8-8-google sheets API.md",
		"/Users/colinmoore/Dev/crafty/app/json/rules.json",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimcrafting.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state/fscraftable.js",
		"/Users/colinmoore/Dev/crafty/app/views/share/worldmapgridedit.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/util/fscontextconsole.js",
		"/Users/colinmoore/Dev/crafty/app/views/pages/gdocs.html",
		"/Users/colinmoore/Dev/crafty/app/views/pages/worldmapedit.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/map/worldmap.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state/fscharacter.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsuieventhandler.js",
		"/Users/colinmoore/Dev/crafty/app/views/share/bank.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/gdoc.html",
		"/Users/colinmoore/Dev/crafty/app/json/rules2.json",
		"/Users/colinmoore/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/colinmoore/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/colinmoore/Library/Application Support/Sublime Text 3/Packages/User/HTML.sublime-settings",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimmessagingchannel.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimobjectfactory.js",
		"/Users/colinmoore/Dev/crafty/app/views/pages/worldmap.html",
		"/Users/colinmoore/Dev/crafty/app/views/share/characterselect.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state/fsharvestable.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimharvesting.js",
		"/Users/colinmoore/Dev/crafty/app/views/share/worldmapgrid.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/ui/recipemodal.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/craftingmodal.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/recipemodal.js",
		"/Users/colinmoore/dev/crafty/app/views/share/recipemodal.html",
		"/Users/colinmoore/dev/crafty/app/scripts/services/craftingmodal.js",
		"/Users/colinmoore/dev/crafty/app/views/share/craftingmodal.html",
		"/Users/colinmoore/Dev/crafty/app/views/share/modaldemo.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/controllers/ModalDemoCtrl.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimrewards.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/controllers/about.js",
		"/Users/colinmoore/dev/crafty/app/views/share/modaldemo.html",
		"/Users/colinmoore/dev/crafty/bower.json",
		"/Users/colinmoore/dev/crafty/app/views/share/activetasks.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/modalservice.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/util/stopwatch.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/util/serverSideTimers.js",
		"/Users/colinmoore/dev/crafty/app/views/pages/timers.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/accounts.js",
		"/Users/colinmoore/dev/crafty/app/scripts/services/sim/fssimgathering.js",
		"/Users/colinmoore/dev/crafty/app/views/pages/db.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/util/backendTimers.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/util/timers.js",
		"/Users/colinmoore/dev/crafty/app/views/pages/worldmap.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/craft.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/load.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/json/state/fsgatherable.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/sim/fssimgathering.js",
		"/Users/colinmoore/dev/crafty/app/views/share/bank.html",
		"/Users/colinmoore/dev/crafty/app/views/share/bankables.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/character.html",
		"/Users/colinmoore/dev/crafty/app/views/share/constructors.html",
		"/Users/colinmoore/Dev/crafty/app/views/share/mapgrid.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/map/world.js",
		"/Users/colinmoore/Dev/crafty/app/views/pages/main.html",
		"/Users/colinmoore/dev/crafty/app/json/worldmap.json",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/mapedit/mapedit.js",
		"/Users/colinmoore/dev/crafty/app/views/share/charactersheetstats.html",
		"/Users/colinmoore/dev/crafty/app/views/share/worldmapgridedit.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/rules.html",
		"/Users/colinmoore/dev/crafty/app/views/main.html",
		"/Users/colinmoore/dev/crafty/app/views/share/characterselect.html",
		"/Users/colinmoore/dev/crafty/publishToEC2JSON.sh",
		"/Users/colinmoore/Dev/crafty/app/views/share/charactersheet.html",
		"/Users/colinmoore/Dev/crafty/app/views/share/bankables.html",
		"/Users/colinmoore/Dev/crafty/app/views/characterselect.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/rewards.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/reference.html",
		"/Users/colinmoore/dev/crafty/app/views/pages/main.html",
		"/Users/colinmoore/Dev/crafty/app/views/main.html",
		"/Users/colinmoore/Dev/crafty/app/views/craftables.html",
		"/Users/colinmoore/Dev/crafty/app/views/harvestables.html",
		"/Users/colinmoore/Dev/crafty/app/views/gatherables.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimbank.js",
		"/Users/colinmoore/Dev/crafty/app/views/recipes.html",
		"/Users/colinmoore/Dev/crafty/app/views/db.html",
		"/Users/colinmoore/Dev/crafty/app/views/charactersheet.html",
		"/Users/colinmoore/Dev/crafty/app/views/character.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsjsonloader.js",
		"/Users/colinmoore/dev/crafty/Gruntfile.js",
		"/Users/colinmoore/Dev/crafty/Gruntfile.js",
		"/Users/colinmoore/Dev/crafty/app/views/tasks.html",
		"/Users/colinmoore/Dev/crafty/app/views/bank.html",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fssimobjectfactory.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fsbankable.js",
		"/Users/colinmoore/Dev/crafty/app/scripts/services/fstask.js"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/colinmoore/Dev/crafty/app",
			"/Users/colinmoore/Dev/crafty/bower_components",
			"/Users/colinmoore/Dev/crafty/app",
			"/Users/colinmoore/Dev/crafty/app/views",
			"/Users/colinmoore/Dev/crafty/app/scripts",
			"/Users/colinmoore/Dev/crafty"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"window.alert",
			"window.al",
			"stateURL",
			"maxWorkers",
			"recipesimulationmaxworkers",
			"maxWorkers",
			"rulesJSON",
			"harvestableDefines",
			"IndexOf",
			"Control",
			"IndexOf",
			"indexOf",
			"map",
			"mapStateURL",
			"FunctionRoom1",
			"FunctionR",
			"outputpre",
			"parse",
			"ang",
			"mapStateJSON",
			"date",
			"title",
			"URL",
			"createSimRules",
			"angular.toJson",
			"updateServerVersionWithData",
			"version",
			"level",
			"MetalBar",
			"Lock",
			"Torc",
			"Lock",
			"Torch",
			"Torch1",
			"constructorDefines",
			"validateJSON",
			"WoodenTrap3",
			"setTimeout",
			"sondata.jsonState",
			"sondata.jsonState.bank\n",
			"bank",
			"ctrller",
			"ctr",
			"ctrller",
			"parseInt",
			"= worker",
			"Workbench3",
			"workst",
			"updateServerVersionWithData",
			"serializedData",
			"stateURL",
			"metal",
			"craftables",
			"isCraftable",
			"SimpleDe",
			"eatingobje",
			"FSSimBank",
			"bank",
			"Object.keys",
			"stringify",
			"tojson",
			"WoodenBeam",
			"Forge",
			"selectedConstructorFilter",
			"Work",
			"work",
			"orderRec",
			"stateURL",
			"angular.",
			"FSTask",
			"FSTas",
			"characters",
			"char",
			"cellIndex",
			"cat",
			"cate",
			"FSTask",
			"hasSpareActivitySlot",
			"task",
			"name",
			"new FSTask",
			"thisService",
			"pendingTasks",
			"activeTasks",
			"cell.tas",
			"cell",
			"createCellTask",
			"new FSTask",
			"hasCraftingIngredients",
			"ingre",
			"getWorkersArray",
			"getInactiveCharacters",
			"keyName",
			"woode",
			"woodenTa",
			"\"Wood\"",
			"qua",
			"quan",
			"hasToolAction",
			"},\n",
			"Granite",
			"granite",
			"FSSimState.characters",
			"indexOf",
			"FSSimState.characters",
			"indexOf",
			"FSSimMessagingChannel",
			"onCompletedTaskHandler",
			"activeTasks",
			"activeT",
			"gather",
			"createClientIntervalTimer",
			"updateClientSideTimers",
			"refres",
			"conso",
			"wrap",
			"remaining",
			"function",
			"thisService",
			"RefreshTimers",
			"    \n",
			"toJson",
			"url",
			"min-w",
			"gem",
			"FSContextConsole",
			"FSTask",
			"isCraftable"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"consumableDefines",
			"characters",
			"FSJSONLoader",
			"FSSimMessagingChannel",
			"FSCraftable",
			"FSBankable",
			"duration",
			"craftables",
			"craftableDefines",
			"FSBackpack",
			"FSSimFactory",
			"recipeDef",
			"FSRecipeDef"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 13,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app/scripts/services/gdocs.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11440,
						"regions":
						{
						},
						"selection":
						[
							[
								7433,
								7366
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2770.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app/views/pages/rules.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12827,
						"regions":
						{
						},
						"selection":
						[
							[
								3751,
								3751
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 909.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app/scripts/controllers/main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2299,
						"regions":
						{
						},
						"selection":
						[
							[
								2279,
								2279
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/colinmoore/dev/crafty/app/scripts/services/json/fsmapstate.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3678,
						"regions":
						{
						},
						"selection":
						[
							[
								1741,
								1741
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 758.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app/scripts/services/json/fssimvalues.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3608,
						"regions":
						{
						},
						"selection":
						[
							[
								1054,
								1062
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 115.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "app/scripts/services/json/fssimworkers.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4986,
						"regions":
						{
						},
						"selection":
						[
							[
								4500,
								4503
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1881.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "app/json/rules.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 127686,
						"regions":
						{
						},
						"selection":
						[
							[
								388,
								388
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "app/json/mapstate.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 74497,
						"regions":
						{
						},
						"selection":
						[
							[
								44083,
								44083
							]
						],
						"settings":
						{
							"auto_name": "{",
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "app/scripts/services/util/fsjsonloader.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4922,
						"regions":
						{
						},
						"selection":
						[
							[
								2725,
								2744
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 4.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "app/scripts/services/json/fssimrules.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6720,
						"regions":
						{
						},
						"selection":
						[
							[
								483,
								484
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 372.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 10,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7684,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										238,
										245
									],
									[
										477,
										484
									],
									[
										850,
										857
									],
									[
										1058,
										1065
									],
									[
										1134,
										1141
									],
									[
										1178,
										1185
									],
									[
										1591,
										1598
									],
									[
										1856,
										1863
									],
									[
										2321,
										2328
									],
									[
										2654,
										2661
									],
									[
										2921,
										2928
									],
									[
										3212,
										3219
									],
									[
										3510,
										3517
									],
									[
										3912,
										3919
									],
									[
										4151,
										4158
									],
									[
										4525,
										4532
									],
									[
										4838,
										4845
									],
									[
										5070,
										5077
									],
									[
										5146,
										5153
									],
									[
										5190,
										5197
									],
									[
										5603,
										5610
									],
									[
										5868,
										5875
									],
									[
										6333,
										6340
									],
									[
										6666,
										6673
									],
									[
										6933,
										6940
									],
									[
										7224,
										7231
									],
									[
										7522,
										7529
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								5100,
								5100
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1170.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "app/scripts/services/map/worldmap.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2929,
						"regions":
						{
						},
						"selection":
						[
							[
								1281,
								1281
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 353.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "app/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6469,
						"regions":
						{
						},
						"selection":
						[
							[
								2737,
								2737
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 704.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1113,
						"regions":
						{
						},
						"selection":
						[
							[
								42,
								42
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "app/views/pages/simworkers.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 654,
						"regions":
						{
						},
						"selection":
						[
							[
								574,
								574
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "app/views/pages/simvalues.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 645,
						"regions":
						{
						},
						"selection":
						[
							[
								371,
								371
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "crafty.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 279.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
